{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\EIRLSassignment\\\\src\\\\components\\\\pages\\\\AddNewBookCSV.js\";\nimport React, { Component } from 'react';\nimport authService from '../services/auth.service';\nimport './ViewAllUserDetails.css';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nclass ListEmployeeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: [],\n      status: \"\",\n      isOpen: false,\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    authService.addNewBookIntegration().then(res => {\n      this.setState({\n        employees: res.data\n      });\n    });\n  }\n\n  notify() {\n    // Calling toast method by passing string\n    toast(this.state.message);\n  }\n\n  handleAddNewBook(category, title, author, inumber, numberOfCopies, date, bookDescription, bookExcerpt, price, year, numberOfPages, status) {\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    if (status === 'new') {\n      authService.addNewBook(category, title, author, inumber, numberOfCopies, date, bookDescription, bookExcerpt, price, year, numberOfPages).then(() => {\n        // this.props.history.push(\"/addNewBookIntegration\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n        if (resMessage == \"Request failed with status code 401\") {\n          this.setState({\n            loading: false,\n            message: \"Username or Password is incorrect, Check again\"\n          });\n          this.notify();\n        } else {\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n          this.notify();\n        }\n      });\n    } else {\n      authService.addNewBook(category, title, author, inumber, numberOfCopies, date, bookDescription, bookExcerpt, price, year, numberOfPages).then(() => {\n        // this.props.history.push(\"/addNewBookIntegration\");\n        window.location.reload();\n      }, error => {\n        const resMessage = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n\n        if (resMessage == \"Request failed with status code 401\") {\n          this.setState({\n            loading: false,\n            message: \"Username or Password is incorrect, Check again\"\n          });\n          this.notify();\n        } else {\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n          this.notify();\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"headerTitle1\",\n        children: \"Add New Book\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rowV\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table table-striped table-boordered\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Book Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 28\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.employees.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [\" \", employee.title]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: employee.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [employee.category, employee.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 40\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"buttonV\",\n                  onClick: () => this.handleAddNewBook(employee.category, employee.title, employee.author, employee.inumber, employee.numberOfCopies, employee.date, employee.bookDescription, employee.bookExcerpt, employee.price, employee.year, employee.numberOfPages, employee.status),\n                  disabled: this.state.loading,\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: employee.status == 'exist' ? `Add as a copy ` : 'Add as a new book'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 14\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 40\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 36\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListEmployeeComponent;","map":{"version":3,"sources":["C:/Users/ayesh/EIRLSassignment/src/components/pages/AddNewBookCSV.js"],"names":["React","Component","authService","toast","configure","ListEmployeeComponent","constructor","props","state","employees","status","isOpen","message","componentDidMount","addNewBookIntegration","then","res","setState","data","notify","handleAddNewBook","category","title","author","inumber","numberOfCopies","date","bookDescription","bookExcerpt","price","year","numberOfPages","loading","addNewBook","window","location","reload","error","resMessage","response","toString","render","map","employee","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport authService from '../services/auth.service';\r\nimport './ViewAllUserDetails.css';\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\ntoast.configure();\r\n\r\n\r\nclass ListEmployeeComponent extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n       \r\n        this.state={\r\n            employees: [],\r\n            status:\"\",\r\n            isOpen: false,\r\n            message: \"\"\r\n        }   \r\n    }\r\n\r\ncomponentDidMount(){\r\n    authService.addNewBookIntegration().then((res) => {\r\n          this.setState({employees:res.data});\r\n    });\r\n \r\n}\r\n\r\nnotify (){\r\n \r\n    // Calling toast method by passing string\r\n    toast(this.state.message)\r\n}\r\n\r\nhandleAddNewBook(category,title,author,inumber,numberOfCopies,date,bookDescription,bookExcerpt,price,year,numberOfPages,status) {\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    if (status === 'new') {\r\n      authService. addNewBook(category,title,author,inumber,numberOfCopies,date,bookDescription,bookExcerpt,price,year,numberOfPages).then(\r\n        () => {\r\n         // this.props.history.push(\"/addNewBookIntegration\");\r\n          window.location.reload();\r\n       \r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n              if(resMessage==\"Request failed with status code 401\"){\r\n                this.setState({\r\n                  loading: false,\r\n                  message: \"Username or Password is incorrect, Check again\"\r\n                });\r\n                this.notify();\r\n              }else{\r\n                this.setState({\r\n                  loading: false,\r\n                  message: resMessage\r\n                });\r\n                this.notify();\r\n              }\r\n          \r\n        }\r\n      );\r\n    } else {\r\n      authService. addNewBook(category,title,author,inumber,numberOfCopies,date,bookDescription,bookExcerpt,price,year,numberOfPages).then(\r\n        () => {\r\n         // this.props.history.push(\"/addNewBookIntegration\");\r\n          window.location.reload();\r\n       \r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n              if(resMessage==\"Request failed with status code 401\"){\r\n                this.setState({\r\n                  loading: false,\r\n                  message: \"Username or Password is incorrect, Check again\"\r\n                });\r\n                this.notify();\r\n              }else{\r\n                this.setState({\r\n                  loading: false,\r\n                  message: resMessage\r\n                });\r\n                this.notify();\r\n              }\r\n          \r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n               <h2 id=\"headerTitle1\">Add New Book</h2> \r\n            <br></br>\r\n               <div className=\"rowV\">\r\n                   <table className=\"table table-striped table-boordered\">\r\n                       <thead>\r\n                           <tr>\r\n                               <th>Book Name</th>\r\n                               <th>Author</th>\r\n                               <th>Category</th>\r\n                               <th>Action</th> \r\n                           </tr>   \r\n                       </thead> \r\n                       <tbody>\r\n                           {    \r\n                               this.state.employees.map(\r\n                                   employee =>\r\n                                   \r\n                                   <tr key={employee.id}>\r\n                                       \r\n                                       <td> {employee.title}</td>\r\n                                       <td>{employee.author}</td>\r\n                                       <td>{employee.category}{employee.status}</td>\r\n                                       <td>\r\n                                       <button className=\"buttonV\"\r\n            onClick={() => this.handleAddNewBook(employee.category,employee.title,employee.author,employee.inumber,employee.numberOfCopies,employee.date,employee.bookDescription,employee.bookExcerpt,employee.price,employee.year,employee.numberOfPages,employee.status)}\r\n              disabled={this.state.loading}\r\n            >  \r\n             <span>{employee.status == 'exist' ? `Add as a copy ` : 'Add as a new book'}</span>\r\n            </button>\r\n            </td>                           \r\n                                   </tr>\r\n                               )\r\n                           }\r\n                       </tbody>\r\n                   </table>\r\n      \r\n               </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ListEmployeeComponent;"]},"metadata":{},"sourceType":"module"}