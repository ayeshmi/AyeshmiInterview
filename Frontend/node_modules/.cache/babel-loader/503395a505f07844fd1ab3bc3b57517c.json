{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\EIRLSassignment\\\\src\\\\components\\\\pages\\\\Payment.js\";\nimport { CardForm, BankForm, PaymentMethods } from 'react-payment';\nimport React, { Component } from 'react';\nimport Dialog from 'material-ui/Dialog';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport server from './server';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet loadedStripe = false;\nexport default class PaymentExample extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dialogOpen: false,\n      cardDialog: true\n    };\n\n    this.openDialog = type => {\n      this.setState({\n        dialogOpen: true,\n        cardDialog: type === 'card' ? true : false\n      });\n    };\n\n    this.closeDialog = () => {\n      this.setState({\n        dialogOpen: false\n      });\n    };\n\n    this.onSubmitCard = card => {\n      const {\n        number,\n        exp_month,\n        exp_year,\n        cvc,\n        name,\n        zip\n      } = card;\n      Stripe.card.createToken({\n        number,\n        exp_month,\n        exp_year,\n        cvc,\n        name,\n        address_zip: zip\n      }, (status, response) => {\n        if (response.error) {\n          alert('Adding card failed with error: ' + response.error.message);\n        } else {\n          const cardToken = response.id;\n          this.closeDialog(); // show success message\n        }\n      });\n    };\n\n    this.onSubmitBank = account => {\n      const {\n        name,\n        accountNumber,\n        routingNumber,\n        accountType\n      } = account;\n      const account_holder_type = accountType === 'personal' ? 'individual' : 'company';\n      Stripe.bankAccount.createToken({\n        country: 'US',\n        currency: 'USD',\n        routing_number: routingNumber,\n        account_number: accountNumber,\n        account_holder_name: name,\n        account_holder_type\n      }, (status, response) => {\n        if (response.error) {\n          alert('Adding bank account failed with error: ' + response.error.message);\n        } else {\n          const bankAccountToken = response.id;\n          this.closeDialog(); // show success message\n        }\n      });\n    };\n  }\n\n  componentWillMount() {\n    if (loadedStripe) {\n      return;\n    }\n\n    const script = document.createElement(\"script\");\n    script.src = \"https://js.stripe.com/v2/\";\n    script.type = \"text/javascript\";\n    script.async = true;\n\n    script.onload = () => {\n      Stripe.setPublishableKey('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\n    };\n\n    document.body.appendChild(script);\n    loadedStripe = true;\n  }\n\n  render() {\n    const title = this.state.cardDialog ? 'Add credit card' : 'Add bank account';\n    return /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      children: [/*#__PURE__*/_jsxDEV(PaymentMethods, {\n        showCards: true,\n        showBanks: true,\n        cards: [{\n          id: '1',\n          last4: '1234',\n          brand: 'visa'\n        }],\n        banks: [],\n        onAddCard: () => this.openDialog('card'),\n        onAddBank: () => this.openDialog('bank'),\n        onRemoveCard: this.removeCard,\n        onRemoveBank: this.removeBank\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        title: title,\n        modal: false,\n        open: this.state.dialogOpen,\n        onRequestClose: this.closeDialog,\n        children: this.state.cardDialog ? /*#__PURE__*/_jsxDEV(CardForm, {\n          onSubmit: this.onSubmitCard,\n          getName: true,\n          getZip: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(BankForm, {\n          onSubmit: this.onSubmitBank\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/ayesh/EIRLSassignment/src/components/pages/Payment.js"],"names":["CardForm","BankForm","PaymentMethods","React","Component","Dialog","MuiThemeProvider","server","loadedStripe","PaymentExample","state","dialogOpen","cardDialog","openDialog","type","setState","closeDialog","onSubmitCard","card","number","exp_month","exp_year","cvc","name","zip","Stripe","createToken","address_zip","status","response","error","alert","message","cardToken","id","onSubmitBank","account","accountNumber","routingNumber","accountType","account_holder_type","bankAccount","country","currency","routing_number","account_number","account_holder_name","bankAccountToken","componentWillMount","script","document","createElement","src","async","onload","setPublishableKey","body","appendChild","render","title","last4","brand","removeCard","removeBank"],"mappings":"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","sourcesContent":["\r\nimport { CardForm, BankForm, PaymentMethods } from 'react-payment';\r\nimport React, { Component } from 'react'\r\nimport Dialog from 'material-ui/Dialog';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\n \r\nimport server from './server';\r\n \r\nlet loadedStripe = false;\r\n \r\nexport default class PaymentExample extends Component {\r\n \r\n  state = {\r\n    dialogOpen: false,\r\n    cardDialog: true\r\n  };\r\n \r\n  componentWillMount() {\r\n    if (loadedStripe) {\r\n      return;\r\n    }\r\n \r\n    const script = document.createElement(\"script\");\r\n    script.src = \"https://js.stripe.com/v2/\";\r\n    script.type = \"text/javascript\";\r\n    script.async = true;\r\n    script.onload = () => {\r\n      Stripe.setPublishableKey('pk_test_6pRNASCoBOKtIshFeQd4XMUh');\r\n    };\r\n    document.body.appendChild(script);\r\n \r\n    loadedStripe = true;\r\n  }\r\n \r\n  openDialog = (type) => {\r\n    this.setState({\r\n      dialogOpen: true,\r\n      cardDialog: type === 'card' ? true : false\r\n    });\r\n  };\r\n \r\n  closeDialog = () => {\r\n    this.setState({dialogOpen: false});\r\n  };\r\n \r\n\r\n \r\n  onSubmitCard = (card) => {\r\n    const { number, exp_month, exp_year, cvc, name, zip } = card;\r\n    Stripe.card.createToken({\r\n      number,\r\n      exp_month,\r\n      exp_year,\r\n      cvc,\r\n      name,\r\n      address_zip: zip\r\n    }, (status, response) => {\r\n      if (response.error) {\r\n        alert('Adding card failed with error: ' + response.error.message)\r\n      } else {\r\n        const cardToken = response.id;\r\n        \r\n        this.closeDialog();\r\n        // show success message\r\n      }\r\n    });\r\n  };\r\n \r\n  onSubmitBank = (account) => {\r\n    const { name, accountNumber, routingNumber, accountType } = account;\r\n    const account_holder_type = accountType === 'personal' ? 'individual' : 'company';\r\n \r\n    Stripe.bankAccount.createToken({\r\n      country: 'US',\r\n      currency: 'USD',\r\n      routing_number: routingNumber,\r\n      account_number: accountNumber,\r\n      account_holder_name: name,\r\n      account_holder_type\r\n    }, (status, response) => {\r\n      if (response.error) {\r\n        alert('Adding bank account failed with error: ' + response.error.message);\r\n      } else {\r\n        const bankAccountToken = response.id;\r\n       \r\n        this.closeDialog();\r\n        // show success message\r\n      }\r\n    })\r\n  };\r\n \r\n  render() {\r\n    const title = this.state.cardDialog ? 'Add credit card' : 'Add bank account';\r\n \r\n    return (\r\n      <MuiThemeProvider>\r\n        <PaymentMethods\r\n          showCards={true}\r\n          showBanks={true}\r\n          cards={[{ id: '1', last4: '1234', brand: 'visa' }]}\r\n          banks={[]}\r\n          onAddCard={() => this.openDialog('card')}\r\n          onAddBank={() => this.openDialog('bank')}\r\n          onRemoveCard={this.removeCard}\r\n          onRemoveBank={this.removeBank}\r\n          />\r\n        <Dialog\r\n          title={title}\r\n          modal={false}\r\n          open={this.state.dialogOpen}\r\n          onRequestClose={this.closeDialog}\r\n        >\r\n          {\r\n            this.state.cardDialog ?\r\n            <CardForm\r\n              onSubmit={this.onSubmitCard}\r\n              getName={true}\r\n              getZip={true}\r\n            />\r\n            :\r\n            <BankForm\r\n              onSubmit={this.onSubmitBank}\r\n            />\r\n          }\r\n        </Dialog>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}