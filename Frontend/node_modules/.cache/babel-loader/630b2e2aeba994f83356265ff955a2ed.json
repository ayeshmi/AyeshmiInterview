{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8082/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  getBooksByID(bookId) {\n    return axios.get('http://localhost:8082/api/auth/book/' + bookId);\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, dateOfBirth, password, userType) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      dateOfBirth,\n      password,\n      userType\n    });\n  }\n\n  contactUs(name, email, message) {\n    return axios.post(API_URL + \"contactus\", {\n      name,\n      email,\n      message\n    });\n  }\n\n  getUsers() {\n    return axios.get(API_URL + \"employees\");\n  }\n\n  getVideos() {\n    return axios.get(API_URL + \"AllVideos\");\n  }\n\n  getBooks() {\n    return axios.get(API_URL + \"books\");\n  }\n\n  getAllContactUsDetails() {\n    return axios.get(API_URL + \"allConatctUs\");\n  }\n\n  getContactUsDetailById(contactID) {\n    return axios.get(API_URL + \"contactus/\" + contactID);\n  }\n\n  replyContactUs(answer, contactID) {\n    return axios.post(API_URL, \"contactus/\" + contactID, answer);\n  }\n\n  addVideoDetails(category, date, description, title) {\n    return axios.post(API_URL + \"addVideo\", {\n      category,\n      title,\n      date,\n      description\n    });\n  }\n\n  addNewBook(category, title, author, edition, isbnNumber, price, numberOfCopies, date, description) {\n    return axios.post(API_URL + \"addbook\", {\n      category,\n      title,\n      author,\n      edition,\n      isbnNumber,\n      price,\n      numberOfCopies,\n      date,\n      description\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n  getUserType(name) {\n    return name;\n  }\n\n  homePageVideos() {\n    return axios.get(API_URL + \"selectedVideo/Romance\");\n  }\n\n  homePageBooks() {\n    return axios.get(API_URL + \"selectedBook/Fantasy\");\n  }\n\n  RhomePageBooksFantasy() {\n    return axios.get(API_URL + \"RselectedBookF/Fantasy\");\n  }\n\n  RhomePageBooksAction() {\n    return axios.get(API_URL + \"RselectedBookA/Action\");\n  }\n\n  RhomePageBooksDrama() {\n    return axios.get(API_URL + \"RselectedBookD/Drama\");\n  }\n\n  RhomePageBooksComic() {\n    return axios.get(API_URL + \"RselectedBookC/Comic and Graphic Novel\");\n  }\n\n  RhomePageBooksRomance() {\n    return axios.get(API_URL + \"RselectedBookR/Romance\");\n  }\n\n  RhomePageBooksHorror() {\n    return axios.get(API_URL + \"RselectedBookH/Horror\");\n  }\n\n  addNewBookReservation(bookname, date, username, id) {\n    return axios.post(API_URL + \"addbook\", {\n      bookname,\n      date,\n      username,\n      id\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/ayesh/EIRLSassignment/src/components/services/auth.service.js"],"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","getBooksByID","bookId","get","logout","removeItem","register","email","dateOfBirth","userType","contactUs","name","message","getUsers","getVideos","getBooks","getAllContactUsDetails","getContactUsDetailById","contactID","replyContactUs","answer","addVideoDetails","category","date","description","title","addNewBook","author","edition","isbnNumber","price","numberOfCopies","getCurrentUser","parse","getItem","getUserType","homePageVideos","homePageBooks","RhomePageBooksFantasy","RhomePageBooksAction","RhomePageBooksDrama","RhomePageBooksComic","RhomePageBooksRomance","RhomePageBooksHorror","addNewBookReservation","bookname","id"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8082/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  getBooksByID(bookId){\r\n    return axios.get('http://localhost:8082/api/auth/book/'+bookId);\r\n}\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email,dateOfBirth, password,userType) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      dateOfBirth,\r\n      password,\r\n      userType\r\n    });\r\n  }\r\n\r\n contactUs(name, email,message) {\r\n    return axios.post(API_URL + \"contactus\", {\r\n      name,\r\n      email,\r\n      message\r\n    });\r\n  }\r\n\r\n  getUsers(){\r\n    return axios.get(API_URL+\"employees\");\r\n    }\r\n\r\n    getVideos(){\r\n      return axios.get(API_URL+\"AllVideos\");\r\n      }\r\n\r\n    getBooks(){\r\n      return axios.get(API_URL+\"books\");\r\n      }\r\n\r\n    getAllContactUsDetails(){\r\n      return axios.get(API_URL+\"allConatctUs\");\r\n      }\r\n\r\n    getContactUsDetailById(contactID){\r\n      return axios.get(API_URL + \"contactus/\"+contactID);\r\n    }\r\n\r\n    replyContactUs(answer,contactID){\r\n      return axios.post(API_URL,\"contactus/\"+contactID,answer);\r\n     }\r\n\r\n     addVideoDetails(category,date,description,title){\r\n      return axios.post(API_URL+\"addVideo\",{category,title,date,description});\r\n     }\r\n\r\n  addNewBook(category,title,author,edition,isbnNumber,price,numberOfCopies,date,description){\r\n    return axios.post(API_URL + \"addbook\", {\r\n     category,\r\n     title,\r\n     author,\r\n     edition,\r\n     isbnNumber,\r\n     price,\r\n     numberOfCopies,\r\n     date,\r\n     description\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n  getUserType(name){\r\n    return name;\r\n  }\r\n  homePageVideos(){\r\n    return axios.get(API_URL+\"selectedVideo/Romance\");\r\n  }\r\n  homePageBooks(){\r\n    return axios.get(API_URL+\"selectedBook/Fantasy\");\r\n  }\r\n  RhomePageBooksFantasy(){\r\n    return axios.get(API_URL+\"RselectedBookF/Fantasy\");\r\n  }\r\n  RhomePageBooksAction(){\r\n    return axios.get(API_URL+\"RselectedBookA/Action\");\r\n  }\r\n  RhomePageBooksDrama(){\r\n    return axios.get(API_URL+\"RselectedBookD/Drama\");\r\n  }\r\n  RhomePageBooksComic(){\r\n    return axios.get(API_URL+\"RselectedBookC/Comic and Graphic Novel\");\r\n  }\r\n  RhomePageBooksRomance(){\r\n    return axios.get(API_URL+\"RselectedBookR/Romance\");\r\n  }\r\n  RhomePageBooksHorror(){\r\n    return axios.get(API_URL+\"RselectedBookH/Horror\");\r\n  }\r\n  addNewBookReservation(bookname,date,username,id){\r\n    return axios.post(API_URL + \"addbook\", {\r\n     bookname,\r\n     date,\r\n     username,\r\n     id\r\n     });\r\n  }\r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}