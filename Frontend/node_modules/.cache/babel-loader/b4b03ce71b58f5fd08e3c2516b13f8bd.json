{"ast":null,"code":"import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\n\nvar MaskedDateTime =\n/** @class */\nfunction () {\n  function MaskedDateTime(parent) {\n    this.mask = '';\n    this.defaultConstant = {\n      day: 'day',\n      month: 'month',\n      year: 'year',\n      hour: 'hour',\n      minute: 'minute',\n      second: 'second',\n      dayOfTheWeek: 'day of the week'\n    };\n    this.hiddenMask = '';\n    this.validCharacters = 'dMyhmHfasz';\n    this.isDayPart = false;\n    this.isMonthPart = false;\n    this.isYearPart = false;\n    this.isHourPart = false;\n    this.isMinutePart = false;\n    this.isSecondsPart = false;\n    this.isMilliSecondsPart = false;\n    this.monthCharacter = '';\n    this.periodCharacter = '';\n    this.isHiddenMask = false;\n    this.isComplete = false;\n    this.isNavigate = false;\n    this.formatRegex = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzz|zz|z|'[^']*'|'[^']*'/g;\n    this.isDeletion = false;\n    this.isShortYear = false;\n    this.parent = parent;\n    this.dateformat = this.parent.format ? this.parent.format : 'dd/MM/yyyy';\n    this.value = this.parent.value != null ? this.parent.value : new Date();\n    this.value.setMonth(0);\n    this.value.setHours(0);\n    this.value.setMinutes(0);\n    this.value.setSeconds(0);\n    this.removeEventListener();\n    this.addEventListener();\n  }\n\n  MaskedDateTime.prototype.getModuleName = function () {\n    return 'MaskedDateTime';\n  };\n\n  MaskedDateTime.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on('createMask', this.createMask, this);\n    this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n    this.parent.on('inputHandler', this.maskInputHandler, this);\n    this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n    this.parent.on('clearHandler', this.clearHandler, this);\n  };\n\n  MaskedDateTime.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.off('createMask', this.createMask);\n    this.parent.off('setMaskSelection', this.validCharacterCheck);\n    this.parent.off('inputHandler', this.maskInputHandler);\n    this.parent.off('keyDownHandler', this.maskKeydownHandler);\n    this.parent.off('clearHandler', this.clearHandler);\n  };\n\n  MaskedDateTime.prototype.createMask = function (dateformat) {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n\n    if (typeof this.parent.maskPlaceholder === 'object') {\n      if (this.parent.maskPlaceholder['day']) this.defaultConstant['day'] = this.parent.maskPlaceholder['day'].toString();\n      if (this.parent.maskPlaceholder['month']) this.defaultConstant['month'] = this.parent.maskPlaceholder['month'].toString();\n      if (this.parent.maskPlaceholder['year']) this.defaultConstant['year'] = this.parent.maskPlaceholder['year'].toString();\n      if (this.parent.maskPlaceholder['hour']) this.defaultConstant['hour'] = this.parent.maskPlaceholder['hour'].toString();\n      if (this.parent.maskPlaceholder['minute']) this.defaultConstant['minute'] = this.parent.maskPlaceholder['minute'].toString();\n      if (this.parent.maskPlaceholder['second']) this.defaultConstant['second'] = this.parent.maskPlaceholder['second'].toString();\n      if (this.parent.maskPlaceholder['dayOfTheWeek']) this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder['dayOfTheWeek'].toString();\n      this.objectString = Object.keys(this.parent.maskPlaceholder);\n      this.getCUltureMaskFormat();\n    }\n\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.mask = this.previousValue = inputValue;\n    this.parent.maskedDateValue = this.mask;\n\n    if (this.parent.value) {\n      this.setDynamicValue();\n    }\n  };\n\n  MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n    this.l10n = new L10n('MaskedDateTime', this.defaultConstant, this.parent.locale);\n    this.objectString = Object.keys(this.defaultConstant);\n\n    for (var i = 0; i < this.objectString.length; i++) {\n      this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n    }\n  };\n\n  MaskedDateTime.prototype.validCharacterCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n\n    for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n      if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n        this.setSelection(this.hiddenMask[i]);\n        return;\n      }\n\n      if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n        this.setSelection(this.hiddenMask[j]);\n        return;\n      }\n    }\n  };\n\n  MaskedDateTime.prototype.setDynamicValue = function () {\n    this.value = this.parent.value;\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n    this.updateValue(); // this.parent.inputElement.selectionStart = start;\n    // this.validCharacterCheck();\n  };\n\n  MaskedDateTime.prototype.setSelection = function (validChar) {\n    var start = -1;\n    var end = 0;\n\n    for (var i = 0; i < this.hiddenMask.length; i++) {\n      if (this.hiddenMask[i] === validChar) {\n        end = i + 1;\n\n        if (start === -1) {\n          start = i;\n        }\n      }\n    }\n\n    if (start < 0) {\n      start = 0;\n    }\n\n    this.parent.inputElement.setSelectionRange(start, end);\n  };\n\n  MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB || args.e.key === END || args.e.key === HOME)) {\n      var start = this.parent.inputElement.selectionStart;\n      var end = this.parent.inputElement.selectionEnd;\n      var length_1 = this.parent.inputElement.value.length;\n\n      if (start == 0 && end == length_1 && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n        var index = args.e.action === SHIFTTAB ? end : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n      }\n\n      if (args.e.key === END || args.e.key === HOME) {\n        var range = args.e.key === END ? length_1 : 0;\n        this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n      }\n\n      this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n    }\n\n    if (!args.e.altKey && !args.e.ctrlKey && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n      var start = this.parent.inputElement.selectionStart;\n      this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n      var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = true;\n      this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n      this.isHiddenMask = false;\n      this.previousHiddenMask = this.hiddenMask;\n      this.previousValue = inputValue;\n      this.parent.inputElement.value = inputValue;\n      this.parent.inputElement.selectionStart = start;\n      this.validCharacterCheck();\n    }\n  };\n\n  MaskedDateTime.prototype.differenceCheck = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var inputValue = this.parent.inputElement.value;\n    var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n    var newVal = inputValue.substring(0, start);\n    var newDateValue = this.value;\n    var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n    if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n      for (var i = newVal.length; i < previousVal.length; i++) {\n        if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n          this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n        }\n      }\n\n      if (this.isDeletion) {\n        return;\n      }\n    }\n\n    switch (this.previousHiddenMask[start - 1]) {\n      case 'd':\n        var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(date)) {\n          return;\n        }\n\n        for (var i = 0; date > maxDate; i++) {\n          date = parseInt(date.toString().slice(1), 10);\n        }\n\n        if (date >= 1) {\n          newDateValue.setDate(date);\n          this.isNavigate = date.toString().length === 2;\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n\n          if (newDateValue.getMonth() !== this.value.getMonth()) {\n            return;\n          }\n\n          this.isDayPart = true;\n        } else {\n          this.isDayPart = false;\n        }\n\n        break;\n\n      case 'M':\n        var month = void 0;\n\n        if (newDateValue.getMonth().toString().length < 2) {\n          month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n        } else {\n          month = parseInt(newVal[start - 1], 10);\n        }\n\n        if (!isNaN(month)) {\n          while (month > 12) {\n            month = parseInt(month.toString().slice(1), 10);\n          }\n\n          if (month >= 1) {\n            newDateValue.setMonth(month - 1);\n            this.isNavigate = month.toString().length === 2;\n\n            if (newDateValue.getMonth() !== month - 1) {\n              newDateValue.setDate(1);\n              newDateValue.setMonth(month - 1);\n            }\n\n            if (this.isDayPart) {\n              var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n              var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n              if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                newDateValue.setDate(currentMaxDate);\n              }\n            }\n\n            this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n            this.isMonthPart = true;\n          } else {\n            newDateValue.setMonth(0);\n            this.isMonthPart = false;\n          }\n        } else {\n          // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n          var monthString = this.getCulturedValue('months[stand-alone].wide');\n          var monthValue = Object.keys(monthString);\n          this.monthCharacter += newVal[start - 1].toLowerCase();\n\n          while (this.monthCharacter.length > 0) {\n            var i = 1;\n\n            for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n              var months = monthValue_1[_i];\n\n              if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                newDateValue.setMonth(i - 1);\n                this.isMonthPart = true;\n                this.value = newDateValue;\n                return;\n              }\n\n              i++;\n            }\n\n            this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n          }\n        }\n\n        break;\n\n      case 'y':\n        var year = (this.isYearPart && newDateValue.getFullYear().toString().length < 4 && !this.isShortYear ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n        this.isShortYear = false;\n\n        if (isNaN(year)) {\n          return;\n        }\n\n        while (year > 9999) {\n          year = parseInt(year.toString().slice(1), 10);\n        }\n\n        if (year < 1) {\n          this.isYearPart = false;\n        } else {\n          newDateValue.setFullYear(year);\n\n          if (year.toString().length === 4) {\n            this.isNavigate = true;\n          }\n\n          this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n          this.isYearPart = true;\n        }\n\n        break;\n\n      case 'h':\n        this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        while (this.hour > 12) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + this.hour % 12);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        break;\n\n      case 'H':\n        this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(this.hour)) {\n          return;\n        }\n\n        for (var i = 0; this.hour > 23; i++) {\n          this.hour = parseInt(this.hour.toString().slice(1), 10);\n        }\n\n        newDateValue.setHours(this.hour);\n        this.isNavigate = this.hour.toString().length === 2;\n        this.isHourPart = true;\n        break;\n\n      case 'm':\n        var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(minutes)) {\n          return;\n        }\n\n        for (var i = 0; minutes > 59; i++) {\n          minutes = parseInt(minutes.toString().slice(1), 10);\n        }\n\n        newDateValue.setMinutes(minutes);\n        this.isNavigate = minutes.toString().length === 2;\n        this.isMinutePart = true;\n        break;\n\n      case 's':\n        var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n\n        if (isNaN(seconds)) {\n          return;\n        }\n\n        for (var i = 0; seconds > 59; i++) {\n          seconds = parseInt(seconds.toString().slice(1), 10);\n        }\n\n        newDateValue.setSeconds(seconds);\n        this.isNavigate = seconds.toString().length === 2;\n        this.isSecondsPart = true;\n        break;\n\n      case 'a':\n        this.periodCharacter += newVal[start - 1].toLowerCase(); // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n\n        var periodString = this.getCulturedValue('dayPeriods.format.wide');\n        var periodkeys = Object.keys(periodString); //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n\n        for (var i = 0; this.periodCharacter.length > 0; i++) {\n          if (periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12 || periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12) {\n            newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n            this.value = newDateValue;\n          }\n\n          this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length); // Object.values()\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    this.value = newDateValue;\n  };\n\n  MaskedDateTime.prototype.formatCheck = function () {\n    var proxy = this;\n\n    function formatValueSpecifier(formattext) {\n      var isSymbol;\n      var result;\n      var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n      var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n      var daysWide = proxy.getCulturedValue('days[stand-alone].wide');\n      var dayKeyWide = Object.keys(daysWide);\n      var monthAbbreviated = proxy.getCulturedValue('months[stand-alone].abbreviated');\n      var monthWide = proxy.getCulturedValue('months[stand-alone].wide');\n      var periodString = proxy.getCulturedValue('dayPeriods.format.wide');\n      var periodkeys = Object.keys(periodString);\n      var milliseconds;\n\n      switch (formattext) {\n        case 'd':\n          result = proxy.isDayPart ? proxy.value.getDate().toString() : proxy.defaultConstant['day'].toString();\n          break;\n\n        case 'dd':\n          result = proxy.isDayPart ? proxy.roundOff(proxy.value.getDate(), 2) : proxy.defaultConstant['day'].toString();\n          break;\n\n        case 'ddd':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'dddd':\n          result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n          break;\n\n        case 'M':\n          result = proxy.isMonthPart ? (proxy.value.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MM':\n          result = proxy.isMonthPart ? proxy.roundOff(proxy.value.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MMM':\n          result = proxy.isMonthPart ? monthAbbreviated[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'MMMM':\n          result = proxy.isMonthPart ? monthWide[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n          break;\n\n        case 'yy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n\n          if (proxy.isYearPart) {\n            proxy.isNavigate = proxy.isShortYear = (proxy.value.getFullYear() % 100).toString().length === 2;\n          }\n\n          break;\n\n        case 'yyyy':\n          result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n          break;\n\n        case 'h':\n          result = proxy.isHourPart ? (proxy.value.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'hh':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'H':\n          result = proxy.isHourPart ? proxy.value.getHours().toString() : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'HH':\n          result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n          break;\n\n        case 'm':\n          result = proxy.isMinutePart ? proxy.value.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n          break;\n\n        case 'mm':\n          result = proxy.isMinutePart ? proxy.roundOff(proxy.value.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n          break;\n\n        case 's':\n          result = proxy.isSecondsPart ? proxy.value.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n          break;\n\n        case 'ss':\n          result = proxy.isSecondsPart ? proxy.roundOff(proxy.value.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n          break;\n\n        case 'f':\n          result = Math.floor(proxy.value.getMilliseconds() / 100).toString();\n          break;\n\n        case 'ff':\n          milliseconds = proxy.value.getMilliseconds();\n\n          if (proxy.value.getMilliseconds() > 99) {\n            milliseconds = Math.floor(proxy.value.getMilliseconds() / 10);\n          }\n\n          result = proxy.roundOff(milliseconds, 2);\n          break;\n\n        case 'fff':\n          result = proxy.roundOff(proxy.value.getMilliseconds(), 3);\n          break;\n\n        case 'a':\n        case 'aa':\n          result = proxy.value.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n          break;\n\n        case 'zzz':\n          var offset = proxy.value.getTimezoneOffset();\n          var offsettime = void 0;\n          isSymbol = offset < 0;\n          offsettime = parseInt(Math.abs(offset / 60).toString().split('.')[0]);\n          offset = Math.abs(offset) - offsettime * 60;\n          result = (isSymbol ? '+' : '-') + proxy.roundOff(offsettime, 2);\n          result += ':' + proxy.roundOff(offset, 2);\n          break;\n\n        case 'z':\n        case 'zz':\n          var offsetValue = proxy.value.getTimezoneOffset() / 60;\n          isSymbol = offsetValue < 0;\n          offsetValue = parseInt(Math.abs(offsetValue).toString().split('.')[0]);\n          result = (isSymbol ? '+' : '-') + (formattext === 'zz' ? proxy.roundOff(offsetValue, 2) : offsetValue.toString());\n          break;\n      }\n\n      result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n\n      if (proxy.isHiddenMask) {\n        var hiddenChar = '';\n\n        if (formattext == 'ddd') {\n          formattext = 'EEE';\n        }\n\n        if (formattext == 'dddd') {\n          formattext = 'EEEE';\n        }\n\n        for (var i = 0; i < result.length; i++) {\n          hiddenChar += formattext[0];\n        }\n\n        return hiddenChar;\n      } else {\n        return result;\n      }\n    }\n\n    return formatValueSpecifier;\n  };\n\n  MaskedDateTime.prototype.maskInputHandler = function () {\n    var start = this.parent.inputElement.selectionStart;\n    var selectionChar = this.previousHiddenMask[start - 1];\n    var inputValue;\n    this.differenceCheck();\n    inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.inputElement.value = inputValue;\n    this.parent.inputElement.selectionStart = start;\n    this.validCharacterCheck();\n\n    if (this.isNavigate || this.isDeletion) {\n      var isbackward = this.isNavigate ? false : true;\n      this.isNavigate = this.isDeletion = false;\n      this.navigateSelection(isbackward);\n    } // this.setSelection(selectionChar);\n    // this.navigateSelection(inputValue);\n\n  };\n\n  MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n    var start = this.parent.inputElement.selectionStart;\n    var end = this.parent.inputElement.selectionEnd;\n    var formatIndex = isbackward ? start - 1 : end + 1;\n\n    while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n      if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n        this.setSelection(this.hiddenMask[formatIndex]);\n        break;\n      }\n\n      formatIndex = formatIndex + (isbackward ? -1 : 1);\n    }\n  };\n\n  MaskedDateTime.prototype.roundOff = function (val, count) {\n    var valueText = val.toString();\n    var length = count - valueText.length;\n    var result = '';\n\n    for (var i = 0; i < length; i++) {\n      result += '0';\n    }\n\n    return result + valueText;\n  };\n\n  MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n    switch (format) {\n      case 'd':\n        this.isDayPart = isSegment;\n        break;\n\n      case 'M':\n        this.isMonthPart = isSegment;\n\n        if (!isSegment) {\n          this.value.setMonth(0);\n          this.monthCharacter = '';\n        }\n\n        break;\n\n      case 'y':\n        this.isYearPart = isSegment;\n        break;\n\n      case 'H':\n      case 'h':\n        this.isHourPart = isSegment;\n\n        if (!isSegment) {\n          this.periodCharacter = '';\n        }\n\n        break;\n\n      case 'm':\n        this.isMinutePart = isSegment;\n        break;\n\n      case 's':\n        this.isSecondsPart = isSegment;\n        break;\n\n      default:\n        return false;\n    }\n\n    return true;\n  };\n\n  MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n    var start = this.parent.inputElement.selectionStart;\n    var formatText = '';\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      formatText = this.hiddenMask[start];\n    } else {\n      return;\n    }\n\n    var newDateValue = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n    this.previousDate = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n    var incrementValue = isDecrement ? -1 : 1;\n\n    switch (formatText) {\n      case 'd':\n        newDateValue.setDate(newDateValue.getDate() + incrementValue);\n        break;\n\n      case 'M':\n        var newMonth = newDateValue.getMonth() + incrementValue;\n        newDateValue.setDate(1);\n        newDateValue.setMonth(newMonth);\n\n        if (this.isDayPart) {\n          var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n          var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n\n          if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n            newDateValue.setDate(currentMaxDate);\n          } else {\n            newDateValue.setDate(this.previousDate.getDate());\n          }\n        } else {\n          newDateValue.setDate(this.previousDate.getDate());\n        }\n\n        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n        break;\n\n      case 'y':\n        newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n        break;\n\n      case 'H':\n      case 'h':\n        newDateValue.setHours(newDateValue.getHours() + incrementValue);\n        break;\n\n      case 'm':\n        newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n        break;\n\n      case 's':\n        newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n        break;\n\n      case 'a':\n        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n        break;\n\n      default:\n        break;\n    }\n\n    this.value = newDateValue.getFullYear() > 0 ? newDateValue : this.value;\n\n    if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n      this.handleDeletion(this.hiddenMask[start], true);\n    }\n  };\n\n  MaskedDateTime.prototype.getCulturedValue = function (format) {\n    var locale = this.parent.locale;\n    var result;\n\n    if (locale === 'en' || locale === 'en-US') {\n      result = getValue(format, getDefaultDateObject());\n    } else {\n      result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n    }\n\n    return result;\n  };\n\n  MaskedDateTime.prototype.clearHandler = function () {\n    this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n    this.updateValue();\n  };\n\n  MaskedDateTime.prototype.updateValue = function () {\n    this.monthCharacter = this.periodCharacter = '';\n    var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = true;\n    this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n    this.isHiddenMask = false;\n    this.previousHiddenMask = this.hiddenMask;\n    this.previousValue = inputValue;\n    this.parent.updateInputValue(inputValue); //this.parent.inputElement.value = inputValue;\n  };\n\n  MaskedDateTime.prototype.destroy = function () {\n    this.removeEventListener();\n  };\n\n  return MaskedDateTime;\n}();\n\nexport { MaskedDateTime };","map":{"version":3,"sources":["C:/Users/ayesh/homepage1/node_modules/@syncfusion/ej2-calendars/src/maskbase/masked-date-time.js"],"names":["L10n","getValue","getDefaultDateObject","cldrData","ARROWLEFT","ARROWRIGHT","ARROWUP","ARROWDOWN","TAB","SHIFTTAB","END","HOME","MaskedDateTime","parent","mask","defaultConstant","day","month","year","hour","minute","second","dayOfTheWeek","hiddenMask","validCharacters","isDayPart","isMonthPart","isYearPart","isHourPart","isMinutePart","isSecondsPart","isMilliSecondsPart","monthCharacter","periodCharacter","isHiddenMask","isComplete","isNavigate","formatRegex","isDeletion","isShortYear","dateformat","format","value","Date","setMonth","setHours","setMinutes","setSeconds","removeEventListener","addEventListener","prototype","getModuleName","isDestroyed","on","createMask","validCharacterCheck","maskInputHandler","maskKeydownHandler","clearHandler","off","maskPlaceholder","toString","objectString","Object","keys","getCUltureMaskFormat","inputValue","replace","formatCheck","previousHiddenMask","previousValue","maskedDateValue","setDynamicValue","l10n","locale","i","length","getConstant","start","inputElement","selectionStart","j","indexOf","setSelection","updateValue","validChar","end","setSelectionRange","args","e","altKey","ctrlKey","key","action","selectionEnd","length_1","index","range","navigateSelection","dateAlteration","differenceCheck","previousVal","substring","newVal","newDateValue","maxDate","getFullYear","getMonth","getDate","handleDeletion","date","parseInt","isNaN","slice","setDate","previousDate","previousMaxDate","currentMaxDate","monthString","getCulturedValue","monthValue","toLowerCase","_i","monthValue_1","months","setFullYear","getHours","Math","floor","minutes","getMinutes","seconds","getSeconds","periodString","periodkeys","proxy","formatValueSpecifier","formattext","isSymbol","result","daysAbbreviated","dayKeyAbbreviated","daysWide","dayKeyWide","monthAbbreviated","monthWide","milliseconds","roundOff","getDay","getMilliseconds","offset","getTimezoneOffset","offsettime","abs","split","offsetValue","undefined","hiddenChar","selectionChar","isbackward","formatIndex","val","count","valueText","isSegment","isDecrement","formatText","incrementValue","newMonth","updateInputValue","destroy"],"mappings":"AAAA,SAASA,IAAT,EAAeC,QAAf,EAAyBC,oBAAzB,EAA+CC,QAA/C,QAA+D,sBAA/D;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,UAAU,GAAG,YAAjB;AACA,IAAIC,OAAO,GAAG,SAAd;AACA,IAAIC,SAAS,GAAG,WAAhB;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,QAAQ,GAAG,UAAf;AACA,IAAIC,GAAG,GAAG,KAAV;AACA,IAAIC,IAAI,GAAG,MAAX;;AACA,IAAIC,cAAc;AAAG;AAAe,YAAY;AAC5C,WAASA,cAAT,CAAwBC,MAAxB,EAAgC;AAC5B,SAAKC,IAAL,GAAY,EAAZ;AACA,SAAKC,eAAL,GAAuB;AACnBC,MAAAA,GAAG,EAAE,KADc;AAEnBC,MAAAA,KAAK,EAAE,OAFY;AAGnBC,MAAAA,IAAI,EAAE,MAHa;AAInBC,MAAAA,IAAI,EAAE,MAJa;AAKnBC,MAAAA,MAAM,EAAE,QALW;AAMnBC,MAAAA,MAAM,EAAE,QANW;AAOnBC,MAAAA,YAAY,EAAE;AAPK,KAAvB;AASA,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,eAAL,GAAuB,YAAvB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,kBAAL,GAA0B,KAA1B;AACA,SAAKC,cAAL,GAAsB,EAAtB;AACA,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,iGAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAK1B,MAAL,GAAcA,MAAd;AACA,SAAK2B,UAAL,GAAkB,KAAK3B,MAAL,CAAY4B,MAAZ,GAAqB,KAAK5B,MAAL,CAAY4B,MAAjC,GAA0C,YAA5D;AACA,SAAKC,KAAL,GAAa,KAAK7B,MAAL,CAAY6B,KAAZ,IAAqB,IAArB,GAA4B,KAAK7B,MAAL,CAAY6B,KAAxC,GAAgD,IAAIC,IAAJ,EAA7D;AACA,SAAKD,KAAL,CAAWE,QAAX,CAAoB,CAApB;AACA,SAAKF,KAAL,CAAWG,QAAX,CAAoB,CAApB;AACA,SAAKH,KAAL,CAAWI,UAAX,CAAsB,CAAtB;AACA,SAAKJ,KAAL,CAAWK,UAAX,CAAsB,CAAtB;AACA,SAAKC,mBAAL;AACA,SAAKC,gBAAL;AACH;;AACDrC,EAAAA,cAAc,CAACsC,SAAf,CAAyBC,aAAzB,GAAyC,YAAY;AACjD,WAAO,gBAAP;AACH,GAFD;;AAGAvC,EAAAA,cAAc,CAACsC,SAAf,CAAyBD,gBAAzB,GAA4C,YAAY;AACpD,QAAI,KAAKpC,MAAL,CAAYuC,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKvC,MAAL,CAAYwC,EAAZ,CAAe,YAAf,EAA6B,KAAKC,UAAlC,EAA8C,IAA9C;AACA,SAAKzC,MAAL,CAAYwC,EAAZ,CAAe,kBAAf,EAAmC,KAAKE,mBAAxC,EAA6D,IAA7D;AACA,SAAK1C,MAAL,CAAYwC,EAAZ,CAAe,cAAf,EAA+B,KAAKG,gBAApC,EAAsD,IAAtD;AACA,SAAK3C,MAAL,CAAYwC,EAAZ,CAAe,gBAAf,EAAiC,KAAKI,kBAAtC,EAA0D,IAA1D;AACA,SAAK5C,MAAL,CAAYwC,EAAZ,CAAe,cAAf,EAA+B,KAAKK,YAApC,EAAkD,IAAlD;AACH,GATD;;AAUA9C,EAAAA,cAAc,CAACsC,SAAf,CAAyBF,mBAAzB,GAA+C,YAAY;AACvD,QAAI,KAAKnC,MAAL,CAAYuC,WAAhB,EAA6B;AACzB;AACH;;AACD,SAAKvC,MAAL,CAAY8C,GAAZ,CAAgB,YAAhB,EAA8B,KAAKL,UAAnC;AACA,SAAKzC,MAAL,CAAY8C,GAAZ,CAAgB,kBAAhB,EAAoC,KAAKJ,mBAAzC;AACA,SAAK1C,MAAL,CAAY8C,GAAZ,CAAgB,cAAhB,EAAgC,KAAKH,gBAArC;AACA,SAAK3C,MAAL,CAAY8C,GAAZ,CAAgB,gBAAhB,EAAkC,KAAKF,kBAAvC;AACA,SAAK5C,MAAL,CAAY8C,GAAZ,CAAgB,cAAhB,EAAgC,KAAKD,YAArC;AACH,GATD;;AAUA9C,EAAAA,cAAc,CAACsC,SAAf,CAAyBI,UAAzB,GAAsC,UAAUd,UAAV,EAAsB;AACxD,SAAKf,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,KAAjH;;AACA,QAAI,OAAO,KAAKjB,MAAL,CAAY+C,eAAnB,KAAuC,QAA3C,EAAqD;AACjD,UAAI,KAAK/C,MAAL,CAAY+C,eAAZ,CAA4B,KAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,KAArB,IAA8B,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,KAA5B,EAAmCC,QAAnC,EAA9B;AACJ,UAAI,KAAKhD,MAAL,CAAY+C,eAAZ,CAA4B,OAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,OAArB,IAAgC,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,OAA5B,EAAqCC,QAArC,EAAhC;AACJ,UAAI,KAAKhD,MAAL,CAAY+C,eAAZ,CAA4B,MAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,MAArB,IAA+B,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,MAA5B,EAAoCC,QAApC,EAA/B;AACJ,UAAI,KAAKhD,MAAL,CAAY+C,eAAZ,CAA4B,MAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,MAArB,IAA+B,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,MAA5B,EAAoCC,QAApC,EAA/B;AACJ,UAAI,KAAKhD,MAAL,CAAY+C,eAAZ,CAA4B,QAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,QAArB,IAAiC,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,QAA5B,EAAsCC,QAAtC,EAAjC;AACJ,UAAI,KAAKhD,MAAL,CAAY+C,eAAZ,CAA4B,QAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,QAArB,IAAiC,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,QAA5B,EAAsCC,QAAtC,EAAjC;AACJ,UAAI,KAAKhD,MAAL,CAAY+C,eAAZ,CAA4B,cAA5B,CAAJ,EACI,KAAK7C,eAAL,CAAqB,cAArB,IAAuC,KAAKF,MAAL,CAAY+C,eAAZ,CAA4B,cAA5B,EAA4CC,QAA5C,EAAvC;AACJ,WAAKC,YAAL,GAAoBC,MAAM,CAACC,IAAP,CAAY,KAAKnD,MAAL,CAAY+C,eAAxB,CAApB;AACA,WAAKK,oBAAL;AACH;;AACD,QAAIC,UAAU,GAAG,KAAK1B,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAjB;AACA,SAAKlC,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAKiB,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAlB;AACA,SAAKlC,YAAL,GAAoB,KAApB;AACA,SAAKmC,kBAAL,GAA0B,KAAK9C,UAA/B;AACA,SAAKT,IAAL,GAAY,KAAKwD,aAAL,GAAqBJ,UAAjC;AACA,SAAKrD,MAAL,CAAY0D,eAAZ,GAA8B,KAAKzD,IAAnC;;AACA,QAAI,KAAKD,MAAL,CAAY6B,KAAhB,EAAuB;AACnB,WAAK8B,eAAL;AACH;AACJ,GA9BD;;AA+BA5D,EAAAA,cAAc,CAACsC,SAAf,CAAyBe,oBAAzB,GAAgD,YAAY;AACxD,SAAKQ,IAAL,GAAY,IAAIzE,IAAJ,CAAS,gBAAT,EAA2B,KAAKe,eAAhC,EAAiD,KAAKF,MAAL,CAAY6D,MAA7D,CAAZ;AACA,SAAKZ,YAAL,GAAoBC,MAAM,CAACC,IAAP,CAAY,KAAKjD,eAAjB,CAApB;;AACA,SAAK,IAAI4D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKb,YAAL,CAAkBc,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/C,WAAK5D,eAAL,CAAqB,KAAK+C,YAAL,CAAkBa,CAAlB,EAAqBd,QAArB,EAArB,IAAwD,KAAKY,IAAL,CAAUI,WAAV,CAAsB,KAAKf,YAAL,CAAkBa,CAAlB,EAAqBd,QAArB,EAAtB,CAAxD;AACH;AACJ,GAND;;AAOAjD,EAAAA,cAAc,CAACsC,SAAf,CAAyBK,mBAAzB,GAA+C,YAAY;AACvD,QAAIuB,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;;AACA,SAAK,IAAIL,CAAC,GAAGG,KAAR,EAAeG,CAAC,GAAGH,KAAK,GAAG,CAAhC,EAAmCH,CAAC,GAAG,KAAKpD,UAAL,CAAgBqD,MAApB,IAA8BK,CAAC,IAAI,CAAtE,EAAyEN,CAAC,IAAIM,CAAC,EAA/E,EAAmF;AAC/E,UAAIN,CAAC,GAAG,KAAKpD,UAAL,CAAgBqD,MAApB,IAA8B,KAAKpD,eAAL,CAAqB0D,OAArB,CAA6B,KAAK3D,UAAL,CAAgBoD,CAAhB,CAA7B,MAAqD,CAAC,CAAxF,EAA2F;AACvF,aAAKQ,YAAL,CAAkB,KAAK5D,UAAL,CAAgBoD,CAAhB,CAAlB;AACA;AACH;;AACD,UAAIM,CAAC,IAAI,CAAL,IAAU,KAAKzD,eAAL,CAAqB0D,OAArB,CAA6B,KAAK3D,UAAL,CAAgB0D,CAAhB,CAA7B,MAAqD,CAAC,CAApE,EAAuE;AACnE,aAAKE,YAAL,CAAkB,KAAK5D,UAAL,CAAgB0D,CAAhB,CAAlB;AACA;AACH;AACJ;AACJ,GAZD;;AAaArE,EAAAA,cAAc,CAACsC,SAAf,CAAyBsB,eAAzB,GAA2C,YAAY;AACnD,SAAK9B,KAAL,GAAa,KAAK7B,MAAL,CAAY6B,KAAzB;AACA,SAAKjB,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,IAAjH;AACA,SAAKsD,WAAL,GAHmD,CAInD;AACA;AACH,GAND;;AAOAxE,EAAAA,cAAc,CAACsC,SAAf,CAAyBiC,YAAzB,GAAwC,UAAUE,SAAV,EAAqB;AACzD,QAAIP,KAAK,GAAG,CAAC,CAAb;AACA,QAAIQ,GAAG,GAAG,CAAV;;AACA,SAAK,IAAIX,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKpD,UAAL,CAAgBqD,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,UAAI,KAAKpD,UAAL,CAAgBoD,CAAhB,MAAuBU,SAA3B,EAAsC;AAClCC,QAAAA,GAAG,GAAGX,CAAC,GAAG,CAAV;;AACA,YAAIG,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdA,UAAAA,KAAK,GAAGH,CAAR;AACH;AACJ;AACJ;;AACD,QAAIG,KAAK,GAAG,CAAZ,EAAe;AACXA,MAAAA,KAAK,GAAG,CAAR;AACH;;AACD,SAAKjE,MAAL,CAAYkE,YAAZ,CAAyBQ,iBAAzB,CAA2CT,KAA3C,EAAkDQ,GAAlD;AACH,GAfD;;AAgBA1E,EAAAA,cAAc,CAACsC,SAAf,CAAyBO,kBAAzB,GAA8C,UAAU+B,IAAV,EAAgB;AAC1D,QAAK,CAACA,IAAI,CAACC,CAAL,CAAOC,MAAR,IAAkB,CAACF,IAAI,CAACC,CAAL,CAAOE,OAA3B,KAAwCH,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAexF,SAAf,IAA4BoF,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAevF,UAA3C,IAAyDmF,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAenF,QAAxE,IAAoF+E,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAepF,GAAnG,IAA0GgF,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBpF,QAA5H,IACxC+E,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAelF,GADyB,IAClB8E,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAejF,IADrC,CAAJ,EACgD;AAC5C,UAAImE,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;AACA,UAAIM,GAAG,GAAG,KAAKzE,MAAL,CAAYkE,YAAZ,CAAyBe,YAAnC;AACA,UAAIC,QAAQ,GAAG,KAAKlF,MAAL,CAAYkE,YAAZ,CAAyBrC,KAAzB,CAA+BkC,MAA9C;;AACA,UAAKE,KAAK,IAAI,CAAT,IAAcQ,GAAG,IAAIS,QAAtB,KAAoCP,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAepF,GAAf,IAAsBgF,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBpF,QAA5E,CAAJ,EAA2F;AACvF,YAAIuF,KAAK,GAAGR,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBpF,QAAlB,GAA6B6E,GAA7B,GAAmC,CAA/C;AACA,aAAKzE,MAAL,CAAYkE,YAAZ,CAAyBC,cAAzB,GAA0C,KAAKnE,MAAL,CAAYkE,YAAZ,CAAyBe,YAAzB,GAAwCE,KAAlF;AACH;;AACD,UAAIR,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAelF,GAAf,IAAsB8E,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAejF,IAAzC,EAA+C;AAC3C,YAAIsF,KAAK,GAAGT,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAelF,GAAf,GAAqBqF,QAArB,GAAgC,CAA5C;AACA,aAAKlF,MAAL,CAAYkE,YAAZ,CAAyBC,cAAzB,GAA0C,KAAKnE,MAAL,CAAYkE,YAAZ,CAAyBe,YAAzB,GAAwCG,KAAlF;AACH;;AACD,WAAKC,iBAAL,CAAuBV,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAexF,SAAf,IAA4BoF,IAAI,CAACC,CAAL,CAAOI,MAAP,KAAkBpF,QAA9C,IAA0D+E,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAelF,GAAzE,GAA+E,IAA/E,GAAsF,KAA7G;AACH;;AACD,QAAK,CAAC8E,IAAI,CAACC,CAAL,CAAOC,MAAR,IAAkB,CAACF,IAAI,CAACC,CAAL,CAAOE,OAA3B,KAAwCH,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAetF,OAAf,IAA0BkF,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAerF,SAAjF,CAAJ,EAAiG;AAC7F,UAAIuE,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;AACA,WAAKmB,cAAL,CAAoBX,IAAI,CAACC,CAAL,CAAOG,GAAP,KAAerF,SAAf,GAA2B,IAA3B,GAAkC,KAAtD;AACA,UAAI2D,UAAU,GAAG,KAAK1B,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAjB;AACA,WAAKlC,YAAL,GAAoB,IAApB;AACA,WAAKX,UAAL,GAAkB,KAAKiB,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAlB;AACA,WAAKlC,YAAL,GAAoB,KAApB;AACA,WAAKmC,kBAAL,GAA0B,KAAK9C,UAA/B;AACA,WAAK+C,aAAL,GAAqBJ,UAArB;AACA,WAAKrD,MAAL,CAAYkE,YAAZ,CAAyBrC,KAAzB,GAAiCwB,UAAjC;AACA,WAAKrD,MAAL,CAAYkE,YAAZ,CAAyBC,cAAzB,GAA0CF,KAA1C;AACA,WAAKvB,mBAAL;AACH;AACJ,GA7BD;;AA8BA3C,EAAAA,cAAc,CAACsC,SAAf,CAAyBkD,eAAzB,GAA2C,YAAY;AACnD,QAAItB,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;AACA,QAAId,UAAU,GAAG,KAAKrD,MAAL,CAAYkE,YAAZ,CAAyBrC,KAA1C;AACA,QAAI2D,WAAW,GAAG,KAAK/B,aAAL,CAAmBgC,SAAnB,CAA6B,CAA7B,EAAgCxB,KAAK,GAAG,KAAKR,aAAL,CAAmBM,MAA3B,GAAoCV,UAAU,CAACU,MAA/E,CAAlB;AACA,QAAI2B,MAAM,GAAGrC,UAAU,CAACoC,SAAX,CAAqB,CAArB,EAAwBxB,KAAxB,CAAb;AACA,QAAI0B,YAAY,GAAG,KAAK9D,KAAxB;AACA,QAAI+D,OAAO,GAAG,IAAI9D,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAAd;;AACA,QAAIP,WAAW,CAACnB,OAAZ,CAAoBqB,MAApB,MAAgC,CAAhC,KAAsCA,MAAM,CAAC3B,MAAP,KAAkB,CAAlB,IAAuB,KAAKP,kBAAL,CAAwBkC,MAAM,CAAC3B,MAAP,GAAgB,CAAxC,MAA+C,KAAKP,kBAAL,CAAwBkC,MAAM,CAAC3B,MAA/B,CAA5G,CAAJ,EAAyJ;AACrJ,WAAK,IAAID,CAAC,GAAG4B,MAAM,CAAC3B,MAApB,EAA4BD,CAAC,GAAG0B,WAAW,CAACzB,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACrD,YAAI,KAAKN,kBAAL,CAAwBM,CAAxB,MAA+B,EAA/B,IAAqC,KAAKnD,eAAL,CAAqB0D,OAArB,CAA6B,KAAKb,kBAAL,CAAwBM,CAAxB,CAA7B,KAA4D,CAArG,EAAwG;AACpG,eAAKrC,UAAL,GAAkB,KAAKuE,cAAL,CAAoB,KAAKxC,kBAAL,CAAwBM,CAAxB,CAApB,EAAgD,KAAhD,CAAlB;AACH;AACJ;;AACD,UAAI,KAAKrC,UAAT,EAAqB;AACjB;AACH;AACJ;;AACD,YAAQ,KAAK+B,kBAAL,CAAwBS,KAAK,GAAG,CAAhC,CAAR;AACI,WAAK,GAAL;AACI,YAAIgC,IAAI,GAAG,CAAC,KAAKrF,SAAL,IAAkB+E,YAAY,CAACI,OAAb,GAAuB/C,QAAvB,GAAkCe,MAAlC,GAA2C,CAA7D,GAAiE4B,YAAY,CAACI,OAAb,KAAyB,EAA1F,GAA+F,CAAhG,IAAqGG,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAxH;;AACA,YAAIkC,KAAK,CAACF,IAAD,CAAT,EAAiB;AACb;AACH;;AACD,aAAK,IAAInC,CAAC,GAAG,CAAb,EAAgBmC,IAAI,GAAGL,OAAvB,EAAgC9B,CAAC,EAAjC,EAAqC;AACjCmC,UAAAA,IAAI,GAAGC,QAAQ,CAACD,IAAI,CAACjD,QAAL,GAAgBoD,KAAhB,CAAsB,CAAtB,CAAD,EAA2B,EAA3B,CAAf;AACH;;AACD,YAAIH,IAAI,IAAI,CAAZ,EAAe;AACXN,UAAAA,YAAY,CAACU,OAAb,CAAqBJ,IAArB;AACA,eAAK1E,UAAL,GAAkB0E,IAAI,CAACjD,QAAL,GAAgBe,MAAhB,KAA2B,CAA7C;AACA,eAAKuC,YAAL,GAAoB,IAAIxE,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,EAArC,EAA8DH,YAAY,CAACI,OAAb,EAA9D,CAApB;;AACA,cAAIJ,YAAY,CAACG,QAAb,OAA4B,KAAKjE,KAAL,CAAWiE,QAAX,EAAhC,EAAuD;AACnD;AACH;;AACD,eAAKlF,SAAL,GAAiB,IAAjB;AACH,SARD,MASK;AACD,eAAKA,SAAL,GAAiB,KAAjB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,YAAIR,KAAK,GAAG,KAAK,CAAjB;;AACA,YAAIuF,YAAY,CAACG,QAAb,GAAwB9C,QAAxB,GAAmCe,MAAnC,GAA4C,CAAhD,EAAmD;AAC/C3D,UAAAA,KAAK,GAAG,CAAC,KAAKS,WAAL,GAAmB,CAAC8E,YAAY,CAACG,QAAb,KAA0B,CAA3B,IAAgC,EAAnD,GAAwD,CAAzD,IAA8DI,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAA9E;AACH,SAFD,MAGK;AACD7D,UAAAA,KAAK,GAAG8F,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAhB;AACH;;AACD,YAAI,CAACkC,KAAK,CAAC/F,KAAD,CAAV,EAAmB;AACf,iBAAOA,KAAK,GAAG,EAAf,EAAmB;AACfA,YAAAA,KAAK,GAAG8F,QAAQ,CAAC9F,KAAK,CAAC4C,QAAN,GAAiBoD,KAAjB,CAAuB,CAAvB,CAAD,EAA4B,EAA5B,CAAhB;AACH;;AACD,cAAIhG,KAAK,IAAI,CAAb,EAAgB;AACZuF,YAAAA,YAAY,CAAC5D,QAAb,CAAsB3B,KAAK,GAAG,CAA9B;AACA,iBAAKmB,UAAL,GAAkBnB,KAAK,CAAC4C,QAAN,GAAiBe,MAAjB,KAA4B,CAA9C;;AACA,gBAAI4B,YAAY,CAACG,QAAb,OAA4B1F,KAAK,GAAG,CAAxC,EAA2C;AACvCuF,cAAAA,YAAY,CAACU,OAAb,CAAqB,CAArB;AACAV,cAAAA,YAAY,CAAC5D,QAAb,CAAsB3B,KAAK,GAAG,CAA9B;AACH;;AACD,gBAAI,KAAKQ,SAAT,EAAoB;AAChB,kBAAI2F,eAAe,GAAG,IAAIzE,IAAJ,CAAS,KAAKwE,YAAL,CAAkBT,WAAlB,EAAT,EAA0C,KAAKS,YAAL,CAAkBR,QAAlB,KAA+B,CAAzE,EAA4E,CAA5E,EAA+EC,OAA/E,EAAtB;AACA,kBAAIS,cAAc,GAAG,IAAI1E,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAArB;;AACA,kBAAI,KAAKO,YAAL,CAAkBP,OAAlB,MAA+BQ,eAA/B,IAAkDC,cAAc,IAAID,eAAxE,EAAyF;AACrFZ,gBAAAA,YAAY,CAACU,OAAb,CAAqBG,cAArB;AACH;AACJ;;AACD,iBAAKF,YAAL,GAAoB,IAAIxE,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,EAArC,EAA8DH,YAAY,CAACI,OAAb,EAA9D,CAApB;AACA,iBAAKlF,WAAL,GAAmB,IAAnB;AACH,WAhBD,MAiBK;AACD8E,YAAAA,YAAY,CAAC5D,QAAb,CAAsB,CAAtB;AACA,iBAAKlB,WAAL,GAAmB,KAAnB;AACH;AACJ,SAzBD,MA0BK;AAAE;AACH,cAAI4F,WAAW,GAAI,KAAKC,gBAAL,CAAsB,0BAAtB,CAAnB;AACA,cAAIC,UAAU,GAAGzD,MAAM,CAACC,IAAP,CAAYsD,WAAZ,CAAjB;AACA,eAAKtF,cAAL,IAAuBuE,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,CAAkB2C,WAAlB,EAAvB;;AACA,iBAAO,KAAKzF,cAAL,CAAoB4C,MAApB,GAA6B,CAApC,EAAuC;AACnC,gBAAID,CAAC,GAAG,CAAR;;AACA,iBAAK,IAAI+C,EAAE,GAAG,CAAT,EAAYC,YAAY,GAAGH,UAAhC,EAA4CE,EAAE,GAAGC,YAAY,CAAC/C,MAA9D,EAAsE8C,EAAE,EAAxE,EAA4E;AACxE,kBAAIE,MAAM,GAAGD,YAAY,CAACD,EAAD,CAAzB;;AACA,kBAAIJ,WAAW,CAAC3C,CAAD,CAAX,CAAe8C,WAAf,GAA6BvC,OAA7B,CAAqC,KAAKlD,cAA1C,MAA8D,CAAlE,EAAqE;AACjEwE,gBAAAA,YAAY,CAAC5D,QAAb,CAAsB+B,CAAC,GAAG,CAA1B;AACA,qBAAKjD,WAAL,GAAmB,IAAnB;AACA,qBAAKgB,KAAL,GAAa8D,YAAb;AACA;AACH;;AACD7B,cAAAA,CAAC;AACJ;;AACD,iBAAK3C,cAAL,GAAsB,KAAKA,cAAL,CAAoBsE,SAApB,CAA8B,CAA9B,EAAiC,KAAKtE,cAAL,CAAoB4C,MAArD,CAAtB;AACH;AACJ;;AACD;;AACJ,WAAK,GAAL;AACI,YAAI1D,IAAI,GAAG,CAAC,KAAKS,UAAL,IAAoB6E,YAAY,CAACE,WAAb,GAA2B7C,QAA3B,GAAsCe,MAAtC,GAA+C,CAA/C,IAAoD,CAAC,KAAKrC,WAA9E,GAA6FiE,YAAY,CAACE,WAAb,KAA6B,EAA1H,GAA+H,CAAhI,IAAqIK,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAxJ;AACA,aAAKvC,WAAL,GAAmB,KAAnB;;AACA,YAAIyE,KAAK,CAAC9F,IAAD,CAAT,EAAiB;AACb;AACH;;AACD,eAAOA,IAAI,GAAG,IAAd,EAAoB;AAChBA,UAAAA,IAAI,GAAG6F,QAAQ,CAAC7F,IAAI,CAAC2C,QAAL,GAAgBoD,KAAhB,CAAsB,CAAtB,CAAD,EAA2B,EAA3B,CAAf;AACH;;AACD,YAAI/F,IAAI,GAAG,CAAX,EAAc;AACV,eAAKS,UAAL,GAAkB,KAAlB;AACH,SAFD,MAGK;AACD6E,UAAAA,YAAY,CAACqB,WAAb,CAAyB3G,IAAzB;;AACA,cAAIA,IAAI,CAAC2C,QAAL,GAAgBe,MAAhB,KAA2B,CAA/B,EAAkC;AAC9B,iBAAKxC,UAAL,GAAkB,IAAlB;AACH;;AACD,eAAK+E,YAAL,GAAoB,IAAIxE,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,EAArC,EAA8DH,YAAY,CAACI,OAAb,EAA9D,CAApB;AACA,eAAKjF,UAAL,GAAkB,IAAlB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKR,IAAL,GAAY,CAAC,KAAKS,UAAL,IAAmB4E,YAAY,CAACsB,QAAb,GAAwBjE,QAAxB,GAAmCe,MAAnC,GAA4C,CAA/D,GAAmE,CAAC4B,YAAY,CAACsB,QAAb,KAA0B,EAA1B,IAAgC,EAAjC,IAAuC,EAA1G,GAA+G,CAAhH,IAAqHf,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAAzI;;AACA,YAAIkC,KAAK,CAAC,KAAK7F,IAAN,CAAT,EAAsB;AAClB;AACH;;AACD,eAAO,KAAKA,IAAL,GAAY,EAAnB,EAAuB;AACnB,eAAKA,IAAL,GAAY4F,QAAQ,CAAC,KAAK5F,IAAL,CAAU0C,QAAV,GAAqBoD,KAArB,CAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAApB;AACH;;AACDT,QAAAA,YAAY,CAAC3D,QAAb,CAAsBkF,IAAI,CAACC,KAAL,CAAWxB,YAAY,CAACsB,QAAb,KAA0B,EAArC,IAA2C,EAA3C,GAAiD,KAAK3G,IAAL,GAAY,EAAnF;AACA,aAAKiB,UAAL,GAAkB,KAAKjB,IAAL,CAAU0C,QAAV,GAAqBe,MAArB,KAAgC,CAAlD;AACA,aAAKhD,UAAL,GAAkB,IAAlB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKT,IAAL,GAAY,CAAC,KAAKS,UAAL,IAAmB4E,YAAY,CAACsB,QAAb,GAAwBjE,QAAxB,GAAmCe,MAAnC,GAA4C,CAA/D,GAAmE4B,YAAY,CAACsB,QAAb,KAA0B,EAA7F,GAAkG,CAAnG,IAAwGf,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAA5H;;AACA,YAAIkC,KAAK,CAAC,KAAK7F,IAAN,CAAT,EAAsB;AAClB;AACH;;AACD,aAAK,IAAIwD,CAAC,GAAG,CAAb,EAAgB,KAAKxD,IAAL,GAAY,EAA5B,EAAgCwD,CAAC,EAAjC,EAAqC;AACjC,eAAKxD,IAAL,GAAY4F,QAAQ,CAAC,KAAK5F,IAAL,CAAU0C,QAAV,GAAqBoD,KAArB,CAA2B,CAA3B,CAAD,EAAgC,EAAhC,CAApB;AACH;;AACDT,QAAAA,YAAY,CAAC3D,QAAb,CAAsB,KAAK1B,IAA3B;AACA,aAAKiB,UAAL,GAAkB,KAAKjB,IAAL,CAAU0C,QAAV,GAAqBe,MAArB,KAAgC,CAAlD;AACA,aAAKhD,UAAL,GAAkB,IAAlB;AACA;;AACJ,WAAK,GAAL;AACI,YAAIqG,OAAO,GAAG,CAAC,KAAKpG,YAAL,IAAqB2E,YAAY,CAAC0B,UAAb,GAA0BrE,QAA1B,GAAqCe,MAArC,GAA8C,CAAnE,GAAuE4B,YAAY,CAAC0B,UAAb,KAA4B,EAAnG,GAAwG,CAAzG,IAA8GnB,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAApI;;AACA,YAAIkC,KAAK,CAACiB,OAAD,CAAT,EAAoB;AAChB;AACH;;AACD,aAAK,IAAItD,CAAC,GAAG,CAAb,EAAgBsD,OAAO,GAAG,EAA1B,EAA8BtD,CAAC,EAA/B,EAAmC;AAC/BsD,UAAAA,OAAO,GAAGlB,QAAQ,CAACkB,OAAO,CAACpE,QAAR,GAAmBoD,KAAnB,CAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAlB;AACH;;AACDT,QAAAA,YAAY,CAAC1D,UAAb,CAAwBmF,OAAxB;AACA,aAAK7F,UAAL,GAAkB6F,OAAO,CAACpE,QAAR,GAAmBe,MAAnB,KAA8B,CAAhD;AACA,aAAK/C,YAAL,GAAoB,IAApB;AACA;;AACJ,WAAK,GAAL;AACI,YAAIsG,OAAO,GAAG,CAAC,KAAKrG,aAAL,IAAsB0E,YAAY,CAAC4B,UAAb,GAA0BvE,QAA1B,GAAqCe,MAArC,GAA8C,CAApE,GAAwE4B,YAAY,CAAC4B,UAAb,KAA4B,EAApG,GAAyG,CAA1G,IAA+GrB,QAAQ,CAACR,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAP,EAAoB,EAApB,CAArI;;AACA,YAAIkC,KAAK,CAACmB,OAAD,CAAT,EAAoB;AAChB;AACH;;AACD,aAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBwD,OAAO,GAAG,EAA1B,EAA8BxD,CAAC,EAA/B,EAAmC;AAC/BwD,UAAAA,OAAO,GAAGpB,QAAQ,CAACoB,OAAO,CAACtE,QAAR,GAAmBoD,KAAnB,CAAyB,CAAzB,CAAD,EAA8B,EAA9B,CAAlB;AACH;;AACDT,QAAAA,YAAY,CAACzD,UAAb,CAAwBoF,OAAxB;AACA,aAAK/F,UAAL,GAAkB+F,OAAO,CAACtE,QAAR,GAAmBe,MAAnB,KAA8B,CAAhD;AACA,aAAK9C,aAAL,GAAqB,IAArB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKG,eAAL,IAAwBsE,MAAM,CAACzB,KAAK,GAAG,CAAT,CAAN,CAAkB2C,WAAlB,EAAxB,CADJ,CAEI;;AACA,YAAIY,YAAY,GAAI,KAAKd,gBAAL,CAAsB,wBAAtB,CAApB;AACA,YAAIe,UAAU,GAAGvE,MAAM,CAACC,IAAP,CAAYqE,YAAZ,CAAjB,CAJJ,CAKI;;AACA,aAAK,IAAI1D,CAAC,GAAG,CAAb,EAAgB,KAAK1C,eAAL,CAAqB2C,MAArB,GAA8B,CAA9C,EAAiDD,CAAC,EAAlD,EAAsD;AAClD,cAAK0D,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAZ,CAA4Bb,WAA5B,GAA0CvC,OAA1C,CAAkD,KAAKjD,eAAvD,MAA4E,CAA5E,IAAiFuE,YAAY,CAACsB,QAAb,MAA2B,EAA7G,IAAqHO,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAZ,CAA4Bb,WAA5B,GAA0CvC,OAA1C,CAAkD,KAAKjD,eAAvD,MAA4E,CAA5E,IAAiFuE,YAAY,CAACsB,QAAb,KAA0B,EAApO,EAAyO;AACrOtB,YAAAA,YAAY,CAAC3D,QAAb,CAAsB,CAAC2D,YAAY,CAACsB,QAAb,KAA0B,EAA3B,IAAiC,EAAvD;AACA,iBAAKpF,KAAL,GAAa8D,YAAb;AACH;;AACD,eAAKvE,eAAL,GAAuB,KAAKA,eAAL,CAAqBqE,SAArB,CAA+B,CAA/B,EAAkC,KAAKrE,eAAL,CAAqB2C,MAAvD,CAAvB,CALkD,CAMlD;AACH;;AACD;;AACJ;AACI;AAjKR;;AAmKA,SAAKlC,KAAL,GAAa8D,YAAb;AACH,GArLD;;AAsLA5F,EAAAA,cAAc,CAACsC,SAAf,CAAyBkB,WAAzB,GAAuC,YAAY;AAC/C,QAAImE,KAAK,GAAG,IAAZ;;AACA,aAASC,oBAAT,CAA8BC,UAA9B,EAA0C;AACtC,UAAIC,QAAJ;AACA,UAAIC,MAAJ;AACA,UAAIC,eAAe,GAAGL,KAAK,CAAChB,gBAAN,CAAuB,+BAAvB,CAAtB;AACA,UAAIsB,iBAAiB,GAAG9E,MAAM,CAACC,IAAP,CAAY4E,eAAZ,CAAxB;AACA,UAAIE,QAAQ,GAAIP,KAAK,CAAChB,gBAAN,CAAuB,wBAAvB,CAAhB;AACA,UAAIwB,UAAU,GAAGhF,MAAM,CAACC,IAAP,CAAY8E,QAAZ,CAAjB;AACA,UAAIE,gBAAgB,GAAIT,KAAK,CAAChB,gBAAN,CAAuB,iCAAvB,CAAxB;AACA,UAAI0B,SAAS,GAAIV,KAAK,CAAChB,gBAAN,CAAuB,0BAAvB,CAAjB;AACA,UAAIc,YAAY,GAAIE,KAAK,CAAChB,gBAAN,CAAuB,wBAAvB,CAApB;AACA,UAAIe,UAAU,GAAGvE,MAAM,CAACC,IAAP,CAAYqE,YAAZ,CAAjB;AACA,UAAIa,YAAJ;;AACA,cAAQT,UAAR;AACI,aAAK,GAAL;AACIE,UAAAA,MAAM,GAAGJ,KAAK,CAAC9G,SAAN,GAAkB8G,KAAK,CAAC7F,KAAN,CAAYkE,OAAZ,GAAsB/C,QAAtB,EAAlB,GAAqD0E,KAAK,CAACxH,eAAN,CAAsB,KAAtB,EAA6B8C,QAA7B,EAA9D;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC9G,SAAN,GAAkB8G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYkE,OAAZ,EAAf,EAAsC,CAAtC,CAAlB,GAA6D2B,KAAK,CAACxH,eAAN,CAAsB,KAAtB,EAA6B8C,QAA7B,EAAtE;AACA;;AACJ,aAAK,KAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC9G,SAAN,IAAmB8G,KAAK,CAAC7G,WAAzB,IAAwC6G,KAAK,CAAC5G,UAA9C,GAA2DiH,eAAe,CAACC,iBAAiB,CAACN,KAAK,CAAC7F,KAAN,CAAY0G,MAAZ,EAAD,CAAlB,CAAf,CAAyDvF,QAAzD,EAA3D,GAAiI0E,KAAK,CAACxH,eAAN,CAAsB,cAAtB,EAAsC8C,QAAtC,EAA1I;AACA;;AACJ,aAAK,MAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC9G,SAAN,IAAmB8G,KAAK,CAAC7G,WAAzB,IAAwC6G,KAAK,CAAC5G,UAA9C,GAA2DmH,QAAQ,CAACC,UAAU,CAACR,KAAK,CAAC7F,KAAN,CAAY0G,MAAZ,EAAD,CAAX,CAAR,CAA2CvF,QAA3C,EAA3D,GAAmH0E,KAAK,CAACxH,eAAN,CAAsB,cAAtB,EAAsC8C,QAAtC,EAA5H;AACA;;AACJ,aAAK,GAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,WAAN,GAAoB,CAAC6G,KAAK,CAAC7F,KAAN,CAAYiE,QAAZ,KAAyB,CAA1B,EAA6B9C,QAA7B,EAApB,GAA8D0E,KAAK,CAACxH,eAAN,CAAsB,OAAtB,EAA+B8C,QAA/B,EAAvE;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,WAAN,GAAoB6G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYiE,QAAZ,KAAyB,CAAxC,EAA2C,CAA3C,CAApB,GAAoE4B,KAAK,CAACxH,eAAN,CAAsB,OAAtB,EAA+B8C,QAA/B,EAA7E;AACA;;AACJ,aAAK,KAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,WAAN,GAAoBsH,gBAAgB,CAACT,KAAK,CAAC7F,KAAN,CAAYiE,QAAZ,KAAyB,CAA1B,CAApC,GAAmE4B,KAAK,CAACxH,eAAN,CAAsB,OAAtB,EAA+B8C,QAA/B,EAA5E;AACA;;AACJ,aAAK,MAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC7G,WAAN,GAAoBuH,SAAS,CAACV,KAAK,CAAC7F,KAAN,CAAYiE,QAAZ,KAAyB,CAA1B,CAA7B,GAA4D4B,KAAK,CAACxH,eAAN,CAAsB,OAAtB,EAA+B8C,QAA/B,EAArE;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC5G,UAAN,GAAmB4G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYgE,WAAZ,KAA4B,GAA3C,EAAgD,CAAhD,CAAnB,GAAwE6B,KAAK,CAACxH,eAAN,CAAsB,MAAtB,EAA8B8C,QAA9B,EAAjF;;AACA,cAAI0E,KAAK,CAAC5G,UAAV,EAAsB;AAClB4G,YAAAA,KAAK,CAACnG,UAAN,GAAmBmG,KAAK,CAAChG,WAAN,GAAoB,CAACgG,KAAK,CAAC7F,KAAN,CAAYgE,WAAZ,KAA4B,GAA7B,EAAkC7C,QAAlC,GAA6Ce,MAA7C,KAAwD,CAA/F;AACH;;AACD;;AACJ,aAAK,MAAL;AACI+D,UAAAA,MAAM,GAAGJ,KAAK,CAAC5G,UAAN,GAAmB4G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYgE,WAAZ,EAAf,EAA0C,CAA1C,CAAnB,GAAkE6B,KAAK,CAACxH,eAAN,CAAsB,MAAtB,EAA8B8C,QAA9B,EAA3E;AACA;;AACJ,aAAK,GAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC3G,UAAN,GAAmB,CAAC2G,KAAK,CAAC7F,KAAN,CAAYoF,QAAZ,KAAyB,EAAzB,IAA+B,EAAhC,EAAoCjE,QAApC,EAAnB,GAAoE0E,KAAK,CAACxH,eAAN,CAAsB,MAAtB,EAA8B8C,QAA9B,EAA7E;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC3G,UAAN,GAAmB2G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYoF,QAAZ,KAAyB,EAAzB,IAA+B,EAA9C,EAAkD,CAAlD,CAAnB,GAA0ES,KAAK,CAACxH,eAAN,CAAsB,MAAtB,EAA8B8C,QAA9B,EAAnF;AACA;;AACJ,aAAK,GAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC3G,UAAN,GAAmB2G,KAAK,CAAC7F,KAAN,CAAYoF,QAAZ,GAAuBjE,QAAvB,EAAnB,GAAuD0E,KAAK,CAACxH,eAAN,CAAsB,MAAtB,EAA8B8C,QAA9B,EAAhE;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC3G,UAAN,GAAmB2G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYoF,QAAZ,EAAf,EAAuC,CAAvC,CAAnB,GAA+DS,KAAK,CAACxH,eAAN,CAAsB,MAAtB,EAA8B8C,QAA9B,EAAxE;AACA;;AACJ,aAAK,GAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC1G,YAAN,GAAqB0G,KAAK,CAAC7F,KAAN,CAAYwF,UAAZ,GAAyBrE,QAAzB,EAArB,GAA2D0E,KAAK,CAACxH,eAAN,CAAsB,QAAtB,EAAgC8C,QAAhC,EAApE;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAAC1G,YAAN,GAAqB0G,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAYwF,UAAZ,EAAf,EAAyC,CAAzC,CAArB,GAAmEK,KAAK,CAACxH,eAAN,CAAsB,QAAtB,EAAgC8C,QAAhC,EAA5E;AACA;;AACJ,aAAK,GAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAACzG,aAAN,GAAsByG,KAAK,CAAC7F,KAAN,CAAY0F,UAAZ,GAAyBvE,QAAzB,EAAtB,GAA4D0E,KAAK,CAACxH,eAAN,CAAsB,QAAtB,EAAgC8C,QAAhC,EAArE;AACA;;AACJ,aAAK,IAAL;AACI8E,UAAAA,MAAM,GAAGJ,KAAK,CAACzG,aAAN,GAAsByG,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAY0F,UAAZ,EAAf,EAAyC,CAAzC,CAAtB,GAAoEG,KAAK,CAACxH,eAAN,CAAsB,QAAtB,EAAgC8C,QAAhC,EAA7E;AACA;;AACJ,aAAK,GAAL;AACI8E,UAAAA,MAAM,GAAGZ,IAAI,CAACC,KAAL,CAAWO,KAAK,CAAC7F,KAAN,CAAY2G,eAAZ,KAAgC,GAA3C,EAAgDxF,QAAhD,EAAT;AACA;;AACJ,aAAK,IAAL;AACIqF,UAAAA,YAAY,GAAGX,KAAK,CAAC7F,KAAN,CAAY2G,eAAZ,EAAf;;AACA,cAAId,KAAK,CAAC7F,KAAN,CAAY2G,eAAZ,KAAgC,EAApC,EAAwC;AACpCH,YAAAA,YAAY,GAAGnB,IAAI,CAACC,KAAL,CAAWO,KAAK,CAAC7F,KAAN,CAAY2G,eAAZ,KAAgC,EAA3C,CAAf;AACH;;AACDV,UAAAA,MAAM,GAAGJ,KAAK,CAACY,QAAN,CAAeD,YAAf,EAA6B,CAA7B,CAAT;AACA;;AACJ,aAAK,KAAL;AACIP,UAAAA,MAAM,GAAGJ,KAAK,CAACY,QAAN,CAAeZ,KAAK,CAAC7F,KAAN,CAAY2G,eAAZ,EAAf,EAA8C,CAA9C,CAAT;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACIV,UAAAA,MAAM,GAAGJ,KAAK,CAAC7F,KAAN,CAAYoF,QAAZ,KAAyB,EAAzB,GAA8BO,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAA1C,GAA4DD,YAAY,CAACC,UAAU,CAAC,CAAD,CAAX,CAAjF;AACA;;AACJ,aAAK,KAAL;AACI,cAAIgB,MAAM,GAAGf,KAAK,CAAC7F,KAAN,CAAY6G,iBAAZ,EAAb;AACA,cAAIC,UAAU,GAAG,KAAK,CAAtB;AACAd,UAAAA,QAAQ,GAAGY,MAAM,GAAG,CAApB;AACAE,UAAAA,UAAU,GAAGzC,QAAQ,CAACgB,IAAI,CAAC0B,GAAL,CAASH,MAAM,GAAG,EAAlB,EAAsBzF,QAAtB,GAAiC6F,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAD,CAArB;AACAJ,UAAAA,MAAM,GAAGvB,IAAI,CAAC0B,GAAL,CAASH,MAAT,IAAmBE,UAAU,GAAG,EAAzC;AACAb,UAAAA,MAAM,GAAG,CAACD,QAAQ,GAAG,GAAH,GAAS,GAAlB,IAAyBH,KAAK,CAACY,QAAN,CAAeK,UAAf,EAA2B,CAA3B,CAAlC;AACAb,UAAAA,MAAM,IAAI,MAAMJ,KAAK,CAACY,QAAN,CAAeG,MAAf,EAAuB,CAAvB,CAAhB;AACA;;AACJ,aAAK,GAAL;AACA,aAAK,IAAL;AACI,cAAIK,WAAW,GAAGpB,KAAK,CAAC7F,KAAN,CAAY6G,iBAAZ,KAAkC,EAApD;AACAb,UAAAA,QAAQ,GAAGiB,WAAW,GAAG,CAAzB;AACAA,UAAAA,WAAW,GAAG5C,QAAQ,CAACgB,IAAI,CAAC0B,GAAL,CAASE,WAAT,EAAsB9F,QAAtB,GAAiC6F,KAAjC,CAAuC,GAAvC,EAA4C,CAA5C,CAAD,CAAtB;AACAf,UAAAA,MAAM,GAAG,CAACD,QAAQ,GAAG,GAAH,GAAS,GAAlB,KAA0BD,UAAU,KAAK,IAAf,GAAsBF,KAAK,CAACY,QAAN,CAAeQ,WAAf,EAA4B,CAA5B,CAAtB,GAAuDA,WAAW,CAAC9F,QAAZ,EAAjF,CAAT;AACA;AA1FR;;AA4FA8E,MAAAA,MAAM,GAAGA,MAAM,KAAKiB,SAAX,GAAuBjB,MAAvB,GAAgCF,UAAU,CAACxB,KAAX,CAAiB,CAAjB,EAAoBwB,UAAU,CAAC7D,MAAX,GAAoB,CAAxC,CAAzC;;AACA,UAAI2D,KAAK,CAACrG,YAAV,EAAwB;AACpB,YAAI2H,UAAU,GAAG,EAAjB;;AACA,YAAIpB,UAAU,IAAI,KAAlB,EAAyB;AACrBA,UAAAA,UAAU,GAAG,KAAb;AACH;;AACD,YAAIA,UAAU,IAAI,MAAlB,EAA0B;AACtBA,UAAAA,UAAU,GAAG,MAAb;AACH;;AACD,aAAK,IAAI9D,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgE,MAAM,CAAC/D,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCkF,UAAAA,UAAU,IAAIpB,UAAU,CAAC,CAAD,CAAxB;AACH;;AACD,eAAOoB,UAAP;AACH,OAZD,MAaK;AACD,eAAOlB,MAAP;AACH;AACJ;;AACD,WAAOH,oBAAP;AACH,GA7HD;;AA8HA5H,EAAAA,cAAc,CAACsC,SAAf,CAAyBM,gBAAzB,GAA4C,YAAY;AACpD,QAAIsB,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;AACA,QAAI8E,aAAa,GAAG,KAAKzF,kBAAL,CAAwBS,KAAK,GAAG,CAAhC,CAApB;AACA,QAAIZ,UAAJ;AACA,SAAKkC,eAAL;AACAlC,IAAAA,UAAU,GAAG,KAAK1B,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAb;AACA,SAAKlC,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAKiB,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAlB;AACA,SAAKlC,YAAL,GAAoB,KAApB;AACA,SAAKmC,kBAAL,GAA0B,KAAK9C,UAA/B;AACA,SAAK+C,aAAL,GAAqBJ,UAArB;AACA,SAAKrD,MAAL,CAAYkE,YAAZ,CAAyBrC,KAAzB,GAAiCwB,UAAjC;AACA,SAAKrD,MAAL,CAAYkE,YAAZ,CAAyBC,cAAzB,GAA0CF,KAA1C;AACA,SAAKvB,mBAAL;;AACA,QAAI,KAAKnB,UAAL,IAAmB,KAAKE,UAA5B,EAAwC;AACpC,UAAIyH,UAAU,GAAG,KAAK3H,UAAL,GAAkB,KAAlB,GAA0B,IAA3C;AACA,WAAKA,UAAL,GAAkB,KAAKE,UAAL,GAAkB,KAApC;AACA,WAAK4D,iBAAL,CAAuB6D,UAAvB;AACH,KAlBmD,CAmBpD;AACA;;AACH,GArBD;;AAsBAnJ,EAAAA,cAAc,CAACsC,SAAf,CAAyBgD,iBAAzB,GAA6C,UAAU6D,UAAV,EAAsB;AAC/D,QAAIjF,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;AACA,QAAIM,GAAG,GAAG,KAAKzE,MAAL,CAAYkE,YAAZ,CAAyBe,YAAnC;AACA,QAAIkE,WAAW,GAAGD,UAAU,GAAGjF,KAAK,GAAG,CAAX,GAAeQ,GAAG,GAAG,CAAjD;;AACA,WAAO0E,WAAW,GAAG,KAAKzI,UAAL,CAAgBqD,MAA9B,IAAwCoF,WAAW,IAAI,CAA9D,EAAiE;AAC7D,UAAI,KAAKxI,eAAL,CAAqB0D,OAArB,CAA6B,KAAK3D,UAAL,CAAgByI,WAAhB,CAA7B,KAA8D,CAAlE,EAAqE;AACjE,aAAK7E,YAAL,CAAkB,KAAK5D,UAAL,CAAgByI,WAAhB,CAAlB;AACA;AACH;;AACDA,MAAAA,WAAW,GAAGA,WAAW,IAAID,UAAU,GAAG,CAAC,CAAJ,GAAQ,CAAtB,CAAzB;AACH;AACJ,GAXD;;AAYAnJ,EAAAA,cAAc,CAACsC,SAAf,CAAyBiG,QAAzB,GAAoC,UAAUc,GAAV,EAAeC,KAAf,EAAsB;AACtD,QAAIC,SAAS,GAAGF,GAAG,CAACpG,QAAJ,EAAhB;AACA,QAAIe,MAAM,GAAGsF,KAAK,GAAGC,SAAS,CAACvF,MAA/B;AACA,QAAI+D,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIhE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,MAApB,EAA4BD,CAAC,EAA7B,EAAiC;AAC7BgE,MAAAA,MAAM,IAAI,GAAV;AACH;;AACD,WAAOA,MAAM,GAAGwB,SAAhB;AACH,GARD;;AASAvJ,EAAAA,cAAc,CAACsC,SAAf,CAAyB2D,cAAzB,GAA0C,UAAUpE,MAAV,EAAkB2H,SAAlB,EAA6B;AACnE,YAAQ3H,MAAR;AACI,WAAK,GAAL;AACI,aAAKhB,SAAL,GAAiB2I,SAAjB;AACA;;AACJ,WAAK,GAAL;AACI,aAAK1I,WAAL,GAAmB0I,SAAnB;;AACA,YAAI,CAACA,SAAL,EAAgB;AACZ,eAAK1H,KAAL,CAAWE,QAAX,CAAoB,CAApB;AACA,eAAKZ,cAAL,GAAsB,EAAtB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKL,UAAL,GAAkByI,SAAlB;AACA;;AACJ,WAAK,GAAL;AACA,WAAK,GAAL;AACI,aAAKxI,UAAL,GAAkBwI,SAAlB;;AACA,YAAI,CAACA,SAAL,EAAgB;AACZ,eAAKnI,eAAL,GAAuB,EAAvB;AACH;;AACD;;AACJ,WAAK,GAAL;AACI,aAAKJ,YAAL,GAAoBuI,SAApB;AACA;;AACJ,WAAK,GAAL;AACI,aAAKtI,aAAL,GAAqBsI,SAArB;AACA;;AACJ;AACI,eAAO,KAAP;AA5BR;;AA8BA,WAAO,IAAP;AACH,GAhCD;;AAiCAxJ,EAAAA,cAAc,CAACsC,SAAf,CAAyBiD,cAAzB,GAA0C,UAAUkE,WAAV,EAAuB;AAC7D,QAAIvF,KAAK,GAAG,KAAKjE,MAAL,CAAYkE,YAAZ,CAAyBC,cAArC;AACA,QAAIsF,UAAU,GAAG,EAAjB;;AACA,QAAI,KAAK9I,eAAL,CAAqB0D,OAArB,CAA6B,KAAK3D,UAAL,CAAgBuD,KAAhB,CAA7B,MAAyD,CAAC,CAA9D,EAAiE;AAC7DwF,MAAAA,UAAU,GAAG,KAAK/I,UAAL,CAAgBuD,KAAhB,CAAb;AACH,KAFD,MAGK;AACD;AACH;;AACD,QAAI0B,YAAY,GAAG,IAAI7D,IAAJ,CAAS,KAAKD,KAAL,CAAWgE,WAAX,EAAT,EAAmC,KAAKhE,KAAL,CAAWiE,QAAX,EAAnC,EAA0D,KAAKjE,KAAL,CAAWkE,OAAX,EAA1D,EAAgF,KAAKlE,KAAL,CAAWoF,QAAX,EAAhF,EAAuG,KAAKpF,KAAL,CAAWwF,UAAX,EAAvG,EAAgI,KAAKxF,KAAL,CAAW0F,UAAX,EAAhI,CAAnB;AACA,SAAKjB,YAAL,GAAoB,IAAIxE,IAAJ,CAAS,KAAKD,KAAL,CAAWgE,WAAX,EAAT,EAAmC,KAAKhE,KAAL,CAAWiE,QAAX,EAAnC,EAA0D,KAAKjE,KAAL,CAAWkE,OAAX,EAA1D,EAAgF,KAAKlE,KAAL,CAAWoF,QAAX,EAAhF,EAAuG,KAAKpF,KAAL,CAAWwF,UAAX,EAAvG,EAAgI,KAAKxF,KAAL,CAAW0F,UAAX,EAAhI,CAApB;AACA,QAAImC,cAAc,GAAGF,WAAW,GAAG,CAAC,CAAJ,GAAQ,CAAxC;;AACA,YAAQC,UAAR;AACI,WAAK,GAAL;AACI9D,QAAAA,YAAY,CAACU,OAAb,CAAqBV,YAAY,CAACI,OAAb,KAAyB2D,cAA9C;AACA;;AACJ,WAAK,GAAL;AACI,YAAIC,QAAQ,GAAGhE,YAAY,CAACG,QAAb,KAA0B4D,cAAzC;AACA/D,QAAAA,YAAY,CAACU,OAAb,CAAqB,CAArB;AACAV,QAAAA,YAAY,CAAC5D,QAAb,CAAsB4H,QAAtB;;AACA,YAAI,KAAK/I,SAAT,EAAoB;AAChB,cAAI2F,eAAe,GAAG,IAAIzE,IAAJ,CAAS,KAAKwE,YAAL,CAAkBT,WAAlB,EAAT,EAA0C,KAAKS,YAAL,CAAkBR,QAAlB,KAA+B,CAAzE,EAA4E,CAA5E,EAA+EC,OAA/E,EAAtB;AACA,cAAIS,cAAc,GAAG,IAAI1E,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,KAA0B,CAA/D,EAAkE,CAAlE,EAAqEC,OAArE,EAArB;;AACA,cAAI,KAAKO,YAAL,CAAkBP,OAAlB,MAA+BQ,eAA/B,IAAkDC,cAAc,IAAID,eAAxE,EAAyF;AACrFZ,YAAAA,YAAY,CAACU,OAAb,CAAqBG,cAArB;AACH,WAFD,MAGK;AACDb,YAAAA,YAAY,CAACU,OAAb,CAAqB,KAAKC,YAAL,CAAkBP,OAAlB,EAArB;AACH;AACJ,SATD,MAUK;AACDJ,UAAAA,YAAY,CAACU,OAAb,CAAqB,KAAKC,YAAL,CAAkBP,OAAlB,EAArB;AACH;;AACD,aAAKO,YAAL,GAAoB,IAAIxE,IAAJ,CAAS6D,YAAY,CAACE,WAAb,EAAT,EAAqCF,YAAY,CAACG,QAAb,EAArC,EAA8DH,YAAY,CAACI,OAAb,EAA9D,CAApB;AACA;;AACJ,WAAK,GAAL;AACIJ,QAAAA,YAAY,CAACqB,WAAb,CAAyBrB,YAAY,CAACE,WAAb,KAA6B6D,cAAtD;AACA;;AACJ,WAAK,GAAL;AACA,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAAC3D,QAAb,CAAsB2D,YAAY,CAACsB,QAAb,KAA0ByC,cAAhD;AACA;;AACJ,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAAC1D,UAAb,CAAwB0D,YAAY,CAAC0B,UAAb,KAA4BqC,cAApD;AACA;;AACJ,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAACzD,UAAb,CAAwByD,YAAY,CAAC4B,UAAb,KAA4BmC,cAApD;AACA;;AACJ,WAAK,GAAL;AACI/D,QAAAA,YAAY,CAAC3D,QAAb,CAAsB,CAAC2D,YAAY,CAACsB,QAAb,KAA0B,EAA3B,IAAiC,EAAvD;AACA;;AACJ;AACI;AAxCR;;AA0CA,SAAKpF,KAAL,GAAa8D,YAAY,CAACE,WAAb,KAA6B,CAA7B,GAAiCF,YAAjC,GAAgD,KAAK9D,KAAlE;;AACA,QAAI,KAAKlB,eAAL,CAAqB0D,OAArB,CAA6B,KAAK3D,UAAL,CAAgBuD,KAAhB,CAA7B,MAAyD,CAAC,CAA9D,EAAiE;AAC7D,WAAK+B,cAAL,CAAoB,KAAKtF,UAAL,CAAgBuD,KAAhB,CAApB,EAA4C,IAA5C;AACH;AACJ,GA1DD;;AA2DAlE,EAAAA,cAAc,CAACsC,SAAf,CAAyBqE,gBAAzB,GAA4C,UAAU9E,MAAV,EAAkB;AAC1D,QAAIiC,MAAM,GAAG,KAAK7D,MAAL,CAAY6D,MAAzB;AACA,QAAIiE,MAAJ;;AACA,QAAIjE,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAK,OAAlC,EAA2C;AACvCiE,MAAAA,MAAM,GAAG1I,QAAQ,CAACwC,MAAD,EAASvC,oBAAoB,EAA7B,CAAjB;AACH,KAFD,MAGK;AACDyI,MAAAA,MAAM,GAAG1I,QAAQ,CAAC,UAAU,EAAV,GAAeyE,MAAf,IAAyB,gCAAgCjC,MAAzD,CAAD,EAAmEtC,QAAnE,CAAjB;AACH;;AACD,WAAOwI,MAAP;AACH,GAVD;;AAWA/H,EAAAA,cAAc,CAACsC,SAAf,CAAyBQ,YAAzB,GAAwC,YAAY;AAChD,SAAKjC,SAAL,GAAiB,KAAKC,WAAL,GAAmB,KAAKC,UAAL,GAAkB,KAAKC,UAAL,GAAkB,KAAKC,YAAL,GAAoB,KAAKC,aAAL,GAAqB,KAAjH;AACA,SAAKsD,WAAL;AACH,GAHD;;AAIAxE,EAAAA,cAAc,CAACsC,SAAf,CAAyBkC,WAAzB,GAAuC,YAAY;AAC/C,SAAKpD,cAAL,GAAsB,KAAKC,eAAL,GAAuB,EAA7C;AACA,QAAIiC,UAAU,GAAG,KAAK1B,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAjB;AACA,SAAKlC,YAAL,GAAoB,IAApB;AACA,SAAKX,UAAL,GAAkB,KAAKiB,UAAL,CAAgB2B,OAAhB,CAAwB,KAAK9B,WAA7B,EAA0C,KAAK+B,WAAL,EAA1C,CAAlB;AACA,SAAKlC,YAAL,GAAoB,KAApB;AACA,SAAKmC,kBAAL,GAA0B,KAAK9C,UAA/B;AACA,SAAK+C,aAAL,GAAqBJ,UAArB;AACA,SAAKrD,MAAL,CAAY4J,gBAAZ,CAA6BvG,UAA7B,EAR+C,CAS/C;AACH,GAVD;;AAWAtD,EAAAA,cAAc,CAACsC,SAAf,CAAyBwH,OAAzB,GAAmC,YAAY;AAC3C,SAAK1H,mBAAL;AACH,GAFD;;AAGA,SAAOpC,cAAP;AACH,CA/nBmC,EAApC;;AAgoBA,SAASA,cAAT","sourcesContent":["import { L10n, getValue, getDefaultDateObject, cldrData } from '@syncfusion/ej2-base';\nvar ARROWLEFT = 'ArrowLeft';\nvar ARROWRIGHT = 'ArrowRight';\nvar ARROWUP = 'ArrowUp';\nvar ARROWDOWN = 'ArrowDown';\nvar TAB = 'Tab';\nvar SHIFTTAB = 'shiftTab';\nvar END = 'End';\nvar HOME = 'Home';\nvar MaskedDateTime = /** @class */ (function () {\n    function MaskedDateTime(parent) {\n        this.mask = '';\n        this.defaultConstant = {\n            day: 'day',\n            month: 'month',\n            year: 'year',\n            hour: 'hour',\n            minute: 'minute',\n            second: 'second',\n            dayOfTheWeek: 'day of the week',\n        };\n        this.hiddenMask = '';\n        this.validCharacters = 'dMyhmHfasz';\n        this.isDayPart = false;\n        this.isMonthPart = false;\n        this.isYearPart = false;\n        this.isHourPart = false;\n        this.isMinutePart = false;\n        this.isSecondsPart = false;\n        this.isMilliSecondsPart = false;\n        this.monthCharacter = '';\n        this.periodCharacter = '';\n        this.isHiddenMask = false;\n        this.isComplete = false;\n        this.isNavigate = false;\n        this.formatRegex = /dddd|ddd|dd|d|MMMM|MMM|MM|M|yyyy|yy|HH|H|hh|h|mm|m|fff|ff|f|aa|a|ss|s|zzz|zz|z|'[^']*'|'[^']*'/g;\n        this.isDeletion = false;\n        this.isShortYear = false;\n        this.parent = parent;\n        this.dateformat = this.parent.format ? this.parent.format : 'dd/MM/yyyy';\n        this.value = this.parent.value != null ? this.parent.value : new Date();\n        this.value.setMonth(0);\n        this.value.setHours(0);\n        this.value.setMinutes(0);\n        this.value.setSeconds(0);\n        this.removeEventListener();\n        this.addEventListener();\n    }\n    MaskedDateTime.prototype.getModuleName = function () {\n        return 'MaskedDateTime';\n    };\n    MaskedDateTime.prototype.addEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.on('createMask', this.createMask, this);\n        this.parent.on('setMaskSelection', this.validCharacterCheck, this);\n        this.parent.on('inputHandler', this.maskInputHandler, this);\n        this.parent.on('keyDownHandler', this.maskKeydownHandler, this);\n        this.parent.on('clearHandler', this.clearHandler, this);\n    };\n    MaskedDateTime.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('createMask', this.createMask);\n        this.parent.off('setMaskSelection', this.validCharacterCheck);\n        this.parent.off('inputHandler', this.maskInputHandler);\n        this.parent.off('keyDownHandler', this.maskKeydownHandler);\n        this.parent.off('clearHandler', this.clearHandler);\n    };\n    MaskedDateTime.prototype.createMask = function (dateformat) {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        if (typeof this.parent.maskPlaceholder === 'object') {\n            if (this.parent.maskPlaceholder['day'])\n                this.defaultConstant['day'] = this.parent.maskPlaceholder['day'].toString();\n            if (this.parent.maskPlaceholder['month'])\n                this.defaultConstant['month'] = this.parent.maskPlaceholder['month'].toString();\n            if (this.parent.maskPlaceholder['year'])\n                this.defaultConstant['year'] = this.parent.maskPlaceholder['year'].toString();\n            if (this.parent.maskPlaceholder['hour'])\n                this.defaultConstant['hour'] = this.parent.maskPlaceholder['hour'].toString();\n            if (this.parent.maskPlaceholder['minute'])\n                this.defaultConstant['minute'] = this.parent.maskPlaceholder['minute'].toString();\n            if (this.parent.maskPlaceholder['second'])\n                this.defaultConstant['second'] = this.parent.maskPlaceholder['second'].toString();\n            if (this.parent.maskPlaceholder['dayOfTheWeek'])\n                this.defaultConstant['dayOfTheWeek'] = this.parent.maskPlaceholder['dayOfTheWeek'].toString();\n            this.objectString = Object.keys(this.parent.maskPlaceholder);\n            this.getCUltureMaskFormat();\n        }\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.mask = this.previousValue = inputValue;\n        this.parent.maskedDateValue = this.mask;\n        if (this.parent.value) {\n            this.setDynamicValue();\n        }\n    };\n    MaskedDateTime.prototype.getCUltureMaskFormat = function () {\n        this.l10n = new L10n('MaskedDateTime', this.defaultConstant, this.parent.locale);\n        this.objectString = Object.keys(this.defaultConstant);\n        for (var i = 0; i < this.objectString.length; i++) {\n            this.defaultConstant[this.objectString[i].toString()] = this.l10n.getConstant(this.objectString[i].toString());\n        }\n    };\n    MaskedDateTime.prototype.validCharacterCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        for (var i = start, j = start - 1; i < this.hiddenMask.length || j >= 0; i++, j--) {\n            if (i < this.hiddenMask.length && this.validCharacters.indexOf(this.hiddenMask[i]) !== -1) {\n                this.setSelection(this.hiddenMask[i]);\n                return;\n            }\n            if (j >= 0 && this.validCharacters.indexOf(this.hiddenMask[j]) !== -1) {\n                this.setSelection(this.hiddenMask[j]);\n                return;\n            }\n        }\n    };\n    MaskedDateTime.prototype.setDynamicValue = function () {\n        this.value = this.parent.value;\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = true;\n        this.updateValue();\n        // this.parent.inputElement.selectionStart = start;\n        // this.validCharacterCheck();\n    };\n    MaskedDateTime.prototype.setSelection = function (validChar) {\n        var start = -1;\n        var end = 0;\n        for (var i = 0; i < this.hiddenMask.length; i++) {\n            if (this.hiddenMask[i] === validChar) {\n                end = i + 1;\n                if (start === -1) {\n                    start = i;\n                }\n            }\n        }\n        if (start < 0) {\n            start = 0;\n        }\n        this.parent.inputElement.setSelectionRange(start, end);\n    };\n    MaskedDateTime.prototype.maskKeydownHandler = function (args) {\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWLEFT || args.e.key === ARROWRIGHT || args.e.key === SHIFTTAB || args.e.key === TAB || args.e.action === SHIFTTAB ||\n            args.e.key === END || args.e.key === HOME)) {\n            var start = this.parent.inputElement.selectionStart;\n            var end = this.parent.inputElement.selectionEnd;\n            var length_1 = this.parent.inputElement.value.length;\n            if ((start == 0 && end == length_1) && (args.e.key === TAB || args.e.action === SHIFTTAB)) {\n                var index = args.e.action === SHIFTTAB ? end : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = index;\n            }\n            if (args.e.key === END || args.e.key === HOME) {\n                var range = args.e.key === END ? length_1 : 0;\n                this.parent.inputElement.selectionStart = this.parent.inputElement.selectionEnd = range;\n            }\n            this.navigateSelection(args.e.key === ARROWLEFT || args.e.action === SHIFTTAB || args.e.key === END ? true : false);\n        }\n        if ((!args.e.altKey && !args.e.ctrlKey) && (args.e.key === ARROWUP || args.e.key === ARROWDOWN)) {\n            var start = this.parent.inputElement.selectionStart;\n            this.dateAlteration(args.e.key === ARROWDOWN ? true : false);\n            var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = true;\n            this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n            this.isHiddenMask = false;\n            this.previousHiddenMask = this.hiddenMask;\n            this.previousValue = inputValue;\n            this.parent.inputElement.value = inputValue;\n            this.parent.inputElement.selectionStart = start;\n            this.validCharacterCheck();\n        }\n    };\n    MaskedDateTime.prototype.differenceCheck = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var inputValue = this.parent.inputElement.value;\n        var previousVal = this.previousValue.substring(0, start + this.previousValue.length - inputValue.length);\n        var newVal = inputValue.substring(0, start);\n        var newDateValue = this.value;\n        var maxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n        if (previousVal.indexOf(newVal) === 0 && (newVal.length === 0 || this.previousHiddenMask[newVal.length - 1] !== this.previousHiddenMask[newVal.length])) {\n            for (var i = newVal.length; i < previousVal.length; i++) {\n                if (this.previousHiddenMask[i] !== '' && this.validCharacters.indexOf(this.previousHiddenMask[i]) >= 0) {\n                    this.isDeletion = this.handleDeletion(this.previousHiddenMask[i], false);\n                }\n            }\n            if (this.isDeletion) {\n                return;\n            }\n        }\n        switch (this.previousHiddenMask[start - 1]) {\n            case 'd':\n                var date = (this.isDayPart && newDateValue.getDate().toString().length < 2 ? newDateValue.getDate() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(date)) {\n                    return;\n                }\n                for (var i = 0; date > maxDate; i++) {\n                    date = parseInt(date.toString().slice(1), 10);\n                }\n                if (date >= 1) {\n                    newDateValue.setDate(date);\n                    this.isNavigate = date.toString().length === 2;\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    if (newDateValue.getMonth() !== this.value.getMonth()) {\n                        return;\n                    }\n                    this.isDayPart = true;\n                }\n                else {\n                    this.isDayPart = false;\n                }\n                break;\n            case 'M':\n                var month = void 0;\n                if (newDateValue.getMonth().toString().length < 2) {\n                    month = (this.isMonthPart ? (newDateValue.getMonth() + 1) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                }\n                else {\n                    month = parseInt(newVal[start - 1], 10);\n                }\n                if (!isNaN(month)) {\n                    while (month > 12) {\n                        month = parseInt(month.toString().slice(1), 10);\n                    }\n                    if (month >= 1) {\n                        newDateValue.setMonth(month - 1);\n                        this.isNavigate = month.toString().length === 2;\n                        if (newDateValue.getMonth() !== month - 1) {\n                            newDateValue.setDate(1);\n                            newDateValue.setMonth(month - 1);\n                        }\n                        if (this.isDayPart) {\n                            var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                            var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                            if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                                newDateValue.setDate(currentMaxDate);\n                            }\n                        }\n                        this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                        this.isMonthPart = true;\n                    }\n                    else {\n                        newDateValue.setMonth(0);\n                        this.isMonthPart = false;\n                    }\n                }\n                else { // let monthString: string[] = <string[]>(getValue('months[stand-alone].wide', getDefaultDateObject()));\n                    var monthString = (this.getCulturedValue('months[stand-alone].wide'));\n                    var monthValue = Object.keys(monthString);\n                    this.monthCharacter += newVal[start - 1].toLowerCase();\n                    while (this.monthCharacter.length > 0) {\n                        var i = 1;\n                        for (var _i = 0, monthValue_1 = monthValue; _i < monthValue_1.length; _i++) {\n                            var months = monthValue_1[_i];\n                            if (monthString[i].toLowerCase().indexOf(this.monthCharacter) === 0) {\n                                newDateValue.setMonth(i - 1);\n                                this.isMonthPart = true;\n                                this.value = newDateValue;\n                                return;\n                            }\n                            i++;\n                        }\n                        this.monthCharacter = this.monthCharacter.substring(1, this.monthCharacter.length);\n                    }\n                }\n                break;\n            case 'y':\n                var year = (this.isYearPart && (newDateValue.getFullYear().toString().length < 4 && !this.isShortYear) ? newDateValue.getFullYear() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                this.isShortYear = false;\n                if (isNaN(year)) {\n                    return;\n                }\n                while (year > 9999) {\n                    year = parseInt(year.toString().slice(1), 10);\n                }\n                if (year < 1) {\n                    this.isYearPart = false;\n                }\n                else {\n                    newDateValue.setFullYear(year);\n                    if (year.toString().length === 4) {\n                        this.isNavigate = true;\n                    }\n                    this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                    this.isYearPart = true;\n                }\n                break;\n            case 'h':\n                this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? (newDateValue.getHours() % 12 || 12) * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                while (this.hour > 12) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(Math.floor(newDateValue.getHours() / 12) * 12 + (this.hour % 12));\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                break;\n            case 'H':\n                this.hour = (this.isHourPart && newDateValue.getHours().toString().length < 2 ? newDateValue.getHours() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(this.hour)) {\n                    return;\n                }\n                for (var i = 0; this.hour > 23; i++) {\n                    this.hour = parseInt(this.hour.toString().slice(1), 10);\n                }\n                newDateValue.setHours(this.hour);\n                this.isNavigate = this.hour.toString().length === 2;\n                this.isHourPart = true;\n                break;\n            case 'm':\n                var minutes = (this.isMinutePart && newDateValue.getMinutes().toString().length < 2 ? newDateValue.getMinutes() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(minutes)) {\n                    return;\n                }\n                for (var i = 0; minutes > 59; i++) {\n                    minutes = parseInt(minutes.toString().slice(1), 10);\n                }\n                newDateValue.setMinutes(minutes);\n                this.isNavigate = minutes.toString().length === 2;\n                this.isMinutePart = true;\n                break;\n            case 's':\n                var seconds = (this.isSecondsPart && newDateValue.getSeconds().toString().length < 2 ? newDateValue.getSeconds() * 10 : 0) + parseInt(newVal[start - 1], 10);\n                if (isNaN(seconds)) {\n                    return;\n                }\n                for (var i = 0; seconds > 59; i++) {\n                    seconds = parseInt(seconds.toString().slice(1), 10);\n                }\n                newDateValue.setSeconds(seconds);\n                this.isNavigate = seconds.toString().length === 2;\n                this.isSecondsPart = true;\n                break;\n            case 'a':\n                this.periodCharacter += newVal[start - 1].toLowerCase();\n                // let periodString: string[] = <string[]>(getValue('dayPeriods.format.wide', getDefaultDateObject()));;\n                var periodString = (this.getCulturedValue('dayPeriods.format.wide'));\n                var periodkeys = Object.keys(periodString);\n                //periodString[periodkeys[0]] : periodString[periodkeys[1]] : periodString[periodkeys[0]];\n                for (var i = 0; this.periodCharacter.length > 0; i++) {\n                    if ((periodString[periodkeys[0]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() >= 12) || (periodString[periodkeys[1]].toLowerCase().indexOf(this.periodCharacter) === 0 && newDateValue.getHours() < 12)) {\n                        newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                        this.value = newDateValue;\n                    }\n                    this.periodCharacter = this.periodCharacter.substring(1, this.periodCharacter.length);\n                    // Object.values()\n                }\n                break;\n            default:\n                break;\n        }\n        this.value = newDateValue;\n    };\n    MaskedDateTime.prototype.formatCheck = function () {\n        var proxy = this;\n        function formatValueSpecifier(formattext) {\n            var isSymbol;\n            var result;\n            var daysAbbreviated = proxy.getCulturedValue('days[stand-alone].abbreviated');\n            var dayKeyAbbreviated = Object.keys(daysAbbreviated);\n            var daysWide = (proxy.getCulturedValue('days[stand-alone].wide'));\n            var dayKeyWide = Object.keys(daysWide);\n            var monthAbbreviated = (proxy.getCulturedValue('months[stand-alone].abbreviated'));\n            var monthWide = (proxy.getCulturedValue('months[stand-alone].wide'));\n            var periodString = (proxy.getCulturedValue('dayPeriods.format.wide'));\n            var periodkeys = Object.keys(periodString);\n            var milliseconds;\n            switch (formattext) {\n                case 'd':\n                    result = proxy.isDayPart ? proxy.value.getDate().toString() : proxy.defaultConstant['day'].toString();\n                    break;\n                case 'dd':\n                    result = proxy.isDayPart ? proxy.roundOff(proxy.value.getDate(), 2) : proxy.defaultConstant['day'].toString();\n                    break;\n                case 'ddd':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysAbbreviated[dayKeyAbbreviated[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'dddd':\n                    result = proxy.isDayPart && proxy.isMonthPart && proxy.isYearPart ? daysWide[dayKeyWide[proxy.value.getDay()]].toString() : proxy.defaultConstant['dayOfTheWeek'].toString();\n                    break;\n                case 'M':\n                    result = proxy.isMonthPart ? (proxy.value.getMonth() + 1).toString() : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MM':\n                    result = proxy.isMonthPart ? proxy.roundOff(proxy.value.getMonth() + 1, 2) : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMM':\n                    result = proxy.isMonthPart ? monthAbbreviated[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'MMMM':\n                    result = proxy.isMonthPart ? monthWide[proxy.value.getMonth() + 1] : proxy.defaultConstant['month'].toString();\n                    break;\n                case 'yy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear() % 100, 2) : proxy.defaultConstant['year'].toString();\n                    if (proxy.isYearPart) {\n                        proxy.isNavigate = proxy.isShortYear = (proxy.value.getFullYear() % 100).toString().length === 2;\n                    }\n                    break;\n                case 'yyyy':\n                    result = proxy.isYearPart ? proxy.roundOff(proxy.value.getFullYear(), 4) : proxy.defaultConstant['year'].toString();\n                    break;\n                case 'h':\n                    result = proxy.isHourPart ? (proxy.value.getHours() % 12 || 12).toString() : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'hh':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours() % 12 || 12, 2) : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'H':\n                    result = proxy.isHourPart ? proxy.value.getHours().toString() : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'HH':\n                    result = proxy.isHourPart ? proxy.roundOff(proxy.value.getHours(), 2) : proxy.defaultConstant['hour'].toString();\n                    break;\n                case 'm':\n                    result = proxy.isMinutePart ? proxy.value.getMinutes().toString() : proxy.defaultConstant['minute'].toString();\n                    break;\n                case 'mm':\n                    result = proxy.isMinutePart ? proxy.roundOff(proxy.value.getMinutes(), 2) : proxy.defaultConstant['minute'].toString();\n                    break;\n                case 's':\n                    result = proxy.isSecondsPart ? proxy.value.getSeconds().toString() : proxy.defaultConstant['second'].toString();\n                    break;\n                case 'ss':\n                    result = proxy.isSecondsPart ? proxy.roundOff(proxy.value.getSeconds(), 2) : proxy.defaultConstant['second'].toString();\n                    break;\n                case 'f':\n                    result = Math.floor(proxy.value.getMilliseconds() / 100).toString();\n                    break;\n                case 'ff':\n                    milliseconds = proxy.value.getMilliseconds();\n                    if (proxy.value.getMilliseconds() > 99) {\n                        milliseconds = Math.floor(proxy.value.getMilliseconds() / 10);\n                    }\n                    result = proxy.roundOff(milliseconds, 2);\n                    break;\n                case 'fff':\n                    result = proxy.roundOff(proxy.value.getMilliseconds(), 3);\n                    break;\n                case 'a':\n                case 'aa':\n                    result = proxy.value.getHours() < 12 ? periodString[periodkeys[0]] : periodString[periodkeys[1]];\n                    break;\n                case 'zzz':\n                    var offset = proxy.value.getTimezoneOffset();\n                    var offsettime = void 0;\n                    isSymbol = offset < 0;\n                    offsettime = parseInt(Math.abs(offset / 60).toString().split('.')[0]);\n                    offset = Math.abs(offset) - offsettime * 60;\n                    result = (isSymbol ? '+' : '-') + proxy.roundOff(offsettime, 2);\n                    result += ':' + proxy.roundOff(offset, 2);\n                    break;\n                case 'z':\n                case 'zz':\n                    var offsetValue = proxy.value.getTimezoneOffset() / 60;\n                    isSymbol = offsetValue < 0;\n                    offsetValue = parseInt(Math.abs(offsetValue).toString().split('.')[0]);\n                    result = (isSymbol ? '+' : '-') + (formattext === 'zz' ? proxy.roundOff(offsetValue, 2) : offsetValue.toString());\n                    break;\n            }\n            result = result !== undefined ? result : formattext.slice(1, formattext.length - 1);\n            if (proxy.isHiddenMask) {\n                var hiddenChar = '';\n                if (formattext == 'ddd') {\n                    formattext = 'EEE';\n                }\n                if (formattext == 'dddd') {\n                    formattext = 'EEEE';\n                }\n                for (var i = 0; i < result.length; i++) {\n                    hiddenChar += formattext[0];\n                }\n                return hiddenChar;\n            }\n            else {\n                return result;\n            }\n        }\n        return formatValueSpecifier;\n    };\n    MaskedDateTime.prototype.maskInputHandler = function () {\n        var start = this.parent.inputElement.selectionStart;\n        var selectionChar = this.previousHiddenMask[start - 1];\n        var inputValue;\n        this.differenceCheck();\n        inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.inputElement.value = inputValue;\n        this.parent.inputElement.selectionStart = start;\n        this.validCharacterCheck();\n        if (this.isNavigate || this.isDeletion) {\n            var isbackward = this.isNavigate ? false : true;\n            this.isNavigate = this.isDeletion = false;\n            this.navigateSelection(isbackward);\n        }\n        // this.setSelection(selectionChar);\n        // this.navigateSelection(inputValue);\n    };\n    MaskedDateTime.prototype.navigateSelection = function (isbackward) {\n        var start = this.parent.inputElement.selectionStart;\n        var end = this.parent.inputElement.selectionEnd;\n        var formatIndex = isbackward ? start - 1 : end + 1;\n        while (formatIndex < this.hiddenMask.length && formatIndex >= 0) {\n            if (this.validCharacters.indexOf(this.hiddenMask[formatIndex]) >= 0) {\n                this.setSelection(this.hiddenMask[formatIndex]);\n                break;\n            }\n            formatIndex = formatIndex + (isbackward ? -1 : 1);\n        }\n    };\n    MaskedDateTime.prototype.roundOff = function (val, count) {\n        var valueText = val.toString();\n        var length = count - valueText.length;\n        var result = '';\n        for (var i = 0; i < length; i++) {\n            result += '0';\n        }\n        return result + valueText;\n    };\n    MaskedDateTime.prototype.handleDeletion = function (format, isSegment) {\n        switch (format) {\n            case 'd':\n                this.isDayPart = isSegment;\n                break;\n            case 'M':\n                this.isMonthPart = isSegment;\n                if (!isSegment) {\n                    this.value.setMonth(0);\n                    this.monthCharacter = '';\n                }\n                break;\n            case 'y':\n                this.isYearPart = isSegment;\n                break;\n            case 'H':\n            case 'h':\n                this.isHourPart = isSegment;\n                if (!isSegment) {\n                    this.periodCharacter = '';\n                }\n                break;\n            case 'm':\n                this.isMinutePart = isSegment;\n                break;\n            case 's':\n                this.isSecondsPart = isSegment;\n                break;\n            default:\n                return false;\n        }\n        return true;\n    };\n    MaskedDateTime.prototype.dateAlteration = function (isDecrement) {\n        var start = this.parent.inputElement.selectionStart;\n        var formatText = '';\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            formatText = this.hiddenMask[start];\n        }\n        else {\n            return;\n        }\n        var newDateValue = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n        this.previousDate = new Date(this.value.getFullYear(), this.value.getMonth(), this.value.getDate(), this.value.getHours(), this.value.getMinutes(), this.value.getSeconds());\n        var incrementValue = isDecrement ? -1 : 1;\n        switch (formatText) {\n            case 'd':\n                newDateValue.setDate(newDateValue.getDate() + incrementValue);\n                break;\n            case 'M':\n                var newMonth = newDateValue.getMonth() + incrementValue;\n                newDateValue.setDate(1);\n                newDateValue.setMonth(newMonth);\n                if (this.isDayPart) {\n                    var previousMaxDate = new Date(this.previousDate.getFullYear(), this.previousDate.getMonth() + 1, 0).getDate();\n                    var currentMaxDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth() + 1, 0).getDate();\n                    if (this.previousDate.getDate() == previousMaxDate && currentMaxDate <= previousMaxDate) {\n                        newDateValue.setDate(currentMaxDate);\n                    }\n                    else {\n                        newDateValue.setDate(this.previousDate.getDate());\n                    }\n                }\n                else {\n                    newDateValue.setDate(this.previousDate.getDate());\n                }\n                this.previousDate = new Date(newDateValue.getFullYear(), newDateValue.getMonth(), newDateValue.getDate());\n                break;\n            case 'y':\n                newDateValue.setFullYear(newDateValue.getFullYear() + incrementValue);\n                break;\n            case 'H':\n            case 'h':\n                newDateValue.setHours(newDateValue.getHours() + incrementValue);\n                break;\n            case 'm':\n                newDateValue.setMinutes(newDateValue.getMinutes() + incrementValue);\n                break;\n            case 's':\n                newDateValue.setSeconds(newDateValue.getSeconds() + incrementValue);\n                break;\n            case 'a':\n                newDateValue.setHours((newDateValue.getHours() + 12) % 24);\n                break;\n            default:\n                break;\n        }\n        this.value = newDateValue.getFullYear() > 0 ? newDateValue : this.value;\n        if (this.validCharacters.indexOf(this.hiddenMask[start]) !== -1) {\n            this.handleDeletion(this.hiddenMask[start], true);\n        }\n    };\n    MaskedDateTime.prototype.getCulturedValue = function (format) {\n        var locale = this.parent.locale;\n        var result;\n        if (locale === 'en' || locale === 'en-US') {\n            result = getValue(format, getDefaultDateObject());\n        }\n        else {\n            result = getValue('main.' + '' + locale + ('.dates.calendars.gregorian.' + format), cldrData);\n        }\n        return result;\n    };\n    MaskedDateTime.prototype.clearHandler = function () {\n        this.isDayPart = this.isMonthPart = this.isYearPart = this.isHourPart = this.isMinutePart = this.isSecondsPart = false;\n        this.updateValue();\n    };\n    MaskedDateTime.prototype.updateValue = function () {\n        this.monthCharacter = this.periodCharacter = '';\n        var inputValue = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = true;\n        this.hiddenMask = this.dateformat.replace(this.formatRegex, this.formatCheck());\n        this.isHiddenMask = false;\n        this.previousHiddenMask = this.hiddenMask;\n        this.previousValue = inputValue;\n        this.parent.updateInputValue(inputValue);\n        //this.parent.inputElement.value = inputValue;\n    };\n    MaskedDateTime.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return MaskedDateTime;\n}());\nexport { MaskedDateTime };\n"]},"metadata":{},"sourceType":"module"}