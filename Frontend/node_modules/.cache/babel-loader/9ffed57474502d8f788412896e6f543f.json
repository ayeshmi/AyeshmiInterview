{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ayesh\\\\EIRLSassignment\\\\src\\\\components\\\\pages\\\\AddProfilePicture.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useDropzone } from \"react-dropzone\";\nimport RootRef from \"@material-ui/core/RootRef\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport CloudUpload from \"@material-ui/icons/CloudUpload\";\nimport clsx from \"clsx\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport CropImage from \"./CropImage\";\nimport authService from '../services/auth.service';\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  dropzoneContainer: {\n    height: 429,\n    background: \"#efefef\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderStyle: \"dashed\",\n    borderColor: \"#aaa\"\n  },\n  preview: {\n    width: 250,\n    height: 250,\n    margin: \"auto\",\n    display: \"block\",\n    marginBottom: theme.spacing(2),\n    objectFit: \"contain\"\n  },\n  wrapper: {\n    margin: theme.spacing(1),\n    position: \"relative\"\n  },\n  buttonSuccess: {\n    backgroundColor: green[500],\n    \"&:hover\": {\n      backgroundColor: green[700]\n    }\n  },\n  fabProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: -6,\n    left: -6,\n    zIndex: 1\n  },\n  buttonProgress: {\n    color: green[500],\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginTop: -12,\n    marginLeft: -12\n  }\n}));\n\nfunction App() {\n  _s();\n\n  const classes = useStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [file, setFile] = React.useState();\n  const [preview, setPreview] = React.useState();\n  const [percent, setPercent] = React.useState(0);\n  const [downloadUri, setDownloadUri] = React.useState();\n  const [selectedImageFile, setSelectedImageFile] = React.useState();\n  const currentUser = checkUsername();\n  const [username, setUsername] = React.useState(currentUser.username);\n  const [image, setImage] = React.useState(currentUser.profileImage);\n  const VerifyAccount = withRouter(props => {\n    email = props.match.params;\n  });\n  const [email, setEmail] = React.useState(VerifyAccount);\n  const buttonClassname = clsx({\n    [classes.buttonSuccess]: success\n  });\n  const onDrop = React.useCallback(acceptedFiles => {\n    const fileDropped = acceptedFiles[0];\n\n    if (fileDropped[\"type\"].split(\"/\")[0] === \"image\") {\n      setSelectedImageFile(fileDropped);\n      return;\n    }\n\n    setFile(fileDropped);\n    const previewUrl = URL.createObjectURL(fileDropped);\n    setPreview(previewUrl);\n    setSuccess(false);\n    setPercent(0);\n  });\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    multiple: false,\n    onDrop\n  });\n  const {\n    ref,\n    ...rootProps\n  } = getRootProps();\n\n  const uploadFile = async () => {\n    try {\n      setSuccess(false);\n      setLoading(true);\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"user\", email);\n      const API_URL = \"http://localhost:8082/api/auth/addProfilePicture\";\n      const response = await axios.put(API_URL, formData, {\n        onUploadProgress: progressEvent => {\n          const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          setPercent(username);\n        }\n      }); // setUsername(response.data.username);\n\n      setDownloadUri(response.data.fileDownloadUri);\n      setSuccess(true);\n      setLoading(false);\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  const onCropSave = ({\n    file,\n    preview\n  }) => {\n    setPreview(preview);\n    setFile(file);\n    setSuccess(false);\n    setPercent(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 4,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              style: {\n                padding: 16\n              },\n              children: \"Add Your Profile Picture.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: 16\n            },\n            children: /*#__PURE__*/_jsxDEV(RootRef, {\n              rootRef: ref,\n              children: /*#__PURE__*/_jsxDEV(Paper, { ...rootProps,\n                elevation: 0,\n                className: classes.dropzoneContainer,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Drag 'n' drop some image here, or click to select image \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            style: {\n              padding: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              align: \"center\",\n              variant: \"subtitle1\",\n              children: \"Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              onLoad: () => URL.revokeObjectURL(preview),\n              className: classes.preview,\n              src: preview || image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), file && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                style: {\n                  marginTop: 16\n                },\n                alignItems: \"center\",\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 2,\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.wrapper,\n                    children: [/*#__PURE__*/_jsxDEV(Fab, {\n                      \"aria-label\": \"save\",\n                      color: \"primary\",\n                      className: buttonClassname,\n                      onClick: uploadFile,\n                      children: success ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 38\n                      }, this) : /*#__PURE__*/_jsxDEV(CloudUpload, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 210,\n                        columnNumber: 54\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 25\n                    }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      size: 68,\n                      className: classes.fabProgress\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 213,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 10,\n                  children: [file && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body\",\n                    children: file.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 25\n                  }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(LinearProgress, {\n                      variant: \"determinate\",\n                      value: percent\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 227,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\"\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body\",\n                        children: [percent, \"%\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 238,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this), success && /*#__PURE__*/_jsxDEV(Typography, {\n                    children: [\"Profile Picture Successfully Updated!\", \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CropImage, {\n      onSave: onCropSave,\n      selectedFile: selectedImageFile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"39zz+0G9O1GiTqxsSIrnJ/P0Wek=\", false, function () {\n  return [useStyles, useDropzone];\n});\n\n_c = App;\n\nfunction checkUsername() {\n  const currentUser = authService.getCurrentUser(); // Checks for undefined, null, and a string with no characters:\n\n  if (currentUser && currentUser.username && currentUser.username.length > 0) {\n    return currentUser;\n  } // Default case:\n\n\n  return 'Anonymous';\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ayesh/EIRLSassignment/src/components/pages/AddProfilePicture.js"],"names":["React","AppBar","Toolbar","Typography","CssBaseline","Container","Paper","Grid","Divider","useDropzone","RootRef","makeStyles","CircularProgress","green","Button","Fab","CheckIcon","CloudUpload","clsx","LinearProgress","axios","CropImage","authService","withRouter","useStyles","theme","dropzoneContainer","height","background","display","alignItems","justifyContent","borderStyle","borderColor","preview","width","margin","marginBottom","spacing","objectFit","wrapper","position","buttonSuccess","backgroundColor","fabProgress","color","top","left","zIndex","buttonProgress","marginTop","marginLeft","App","classes","loading","setLoading","useState","success","setSuccess","file","setFile","setPreview","percent","setPercent","downloadUri","setDownloadUri","selectedImageFile","setSelectedImageFile","currentUser","checkUsername","username","setUsername","image","setImage","profileImage","VerifyAccount","props","email","match","params","setEmail","buttonClassname","onDrop","useCallback","acceptedFiles","fileDropped","split","previewUrl","URL","createObjectURL","getRootProps","getInputProps","multiple","ref","rootProps","uploadFile","formData","FormData","append","API_URL","response","put","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","data","fileDownloadUri","err","alert","message","onCropSave","padding","revokeObjectURL","name","getCurrentUser","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,KAAT,QAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAEc,KAAD,KAAY;AACvCC,EAAAA,iBAAiB,EAAE;AACjBC,IAAAA,MAAM,EAAE,GADS;AAEjBC,IAAAA,UAAU,EAAE,SAFK;AAGjBC,IAAAA,OAAO,EAAE,MAHQ;AAIjBC,IAAAA,UAAU,EAAE,QAJK;AAKjBC,IAAAA,cAAc,EAAE,QALC;AAMjBC,IAAAA,WAAW,EAAE,QANI;AAOjBC,IAAAA,WAAW,EAAE;AAPI,GADoB;AAUvCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,GADA;AAEPR,IAAAA,MAAM,EAAE,GAFD;AAGPS,IAAAA,MAAM,EAAE,MAHD;AAIPP,IAAAA,OAAO,EAAE,OAJF;AAKPQ,IAAAA,YAAY,EAAEZ,KAAK,CAACa,OAAN,CAAc,CAAd,CALP;AAMPC,IAAAA,SAAS,EAAE;AANJ,GAV8B;AAkBvCC,EAAAA,OAAO,EAAE;AACPJ,IAAAA,MAAM,EAAEX,KAAK,CAACa,OAAN,CAAc,CAAd,CADD;AAEPG,IAAAA,QAAQ,EAAE;AAFH,GAlB8B;AAsBvCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,eAAe,EAAE9B,KAAK,CAAC,GAAD,CADT;AAEb,eAAW;AACT8B,MAAAA,eAAe,EAAE9B,KAAK,CAAC,GAAD;AADb;AAFE,GAtBwB;AA4BvC+B,EAAAA,WAAW,EAAE;AACXC,IAAAA,KAAK,EAAEhC,KAAK,CAAC,GAAD,CADD;AAEX4B,IAAAA,QAAQ,EAAE,UAFC;AAGXK,IAAAA,GAAG,EAAE,CAAC,CAHK;AAIXC,IAAAA,IAAI,EAAE,CAAC,CAJI;AAKXC,IAAAA,MAAM,EAAE;AALG,GA5B0B;AAmCvCC,EAAAA,cAAc,EAAE;AACdJ,IAAAA,KAAK,EAAEhC,KAAK,CAAC,GAAD,CADE;AAEd4B,IAAAA,QAAQ,EAAE,UAFI;AAGdK,IAAAA,GAAG,EAAE,KAHS;AAIdC,IAAAA,IAAI,EAAE,KAJQ;AAKdG,IAAAA,SAAS,EAAE,CAAC,EALE;AAMdC,IAAAA,UAAU,EAAE,CAAC;AANC;AAnCuB,CAAZ,CAAD,CAA5B;;AA+CA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,OAAO,GAAG7B,SAAS,EAAzB;AACA,QAAM,CAAC8B,OAAD,EAAUC,UAAV,IAAwBvD,KAAK,CAACwD,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB1D,KAAK,CAACwD,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB5D,KAAK,CAACwD,QAAN,EAAxB;AACA,QAAM,CAACtB,OAAD,EAAU2B,UAAV,IAAwB7D,KAAK,CAACwD,QAAN,EAA9B;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwB/D,KAAK,CAACwD,QAAN,CAAe,CAAf,CAA9B;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCjE,KAAK,CAACwD,QAAN,EAAtC;AACA,QAAM,CAACU,iBAAD,EAAoBC,oBAApB,IAA4CnE,KAAK,CAACwD,QAAN,EAAlD;AACA,QAAMY,WAAW,GAAGC,aAAa,EAAjC;AACA,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBvE,KAAK,CAACwD,QAAN,CAAeY,WAAW,CAACE,QAA3B,CAA7B;AACA,QAAM,CAACE,KAAD,EAAOC,QAAP,IAAiBzE,KAAK,CAACwD,QAAN,CAAeY,WAAW,CAACM,YAA3B,CAAvB;AAEA,QAAMC,aAAa,GAAGpD,UAAU,CAAEqD,KAAD,IAAW;AACzCC,IAAAA,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAApB;AAEF,GAH+B,CAAhC;AAIA,QAAK,CAACF,KAAD,EAAOG,QAAP,IAAiBhF,KAAK,CAACwD,QAAN,CAAemB,aAAf,CAAtB;AAEA,QAAMM,eAAe,GAAG/D,IAAI,CAAC;AAC3B,KAACmC,OAAO,CAACX,aAAT,GAAyBe;AADE,GAAD,CAA5B;AAIA,QAAMyB,MAAM,GAAGlF,KAAK,CAACmF,WAAN,CAAmBC,aAAD,IAAmB;AAClD,UAAMC,WAAW,GAAGD,aAAa,CAAC,CAAD,CAAjC;;AACA,QAAIC,WAAW,CAAC,MAAD,CAAX,CAAoBC,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,MAAsC,OAA1C,EAAmD;AACjDnB,MAAAA,oBAAoB,CAACkB,WAAD,CAApB;AAEA;AACD;;AACDzB,IAAAA,OAAO,CAACyB,WAAD,CAAP;AACA,UAAME,UAAU,GAAGC,GAAG,CAACC,eAAJ,CAAoBJ,WAApB,CAAnB;AACAxB,IAAAA,UAAU,CAAC0B,UAAD,CAAV;AACA7B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,IAAAA,UAAU,CAAC,CAAD,CAAV;AAED,GAbc,CAAf;AAiBA,QAAM;AAAE2B,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkClF,WAAW,CAAC;AAClDmF,IAAAA,QAAQ,EAAE,KADwC;AAElDV,IAAAA;AAFkD,GAAD,CAAnD;AAKA,QAAM;AAAEW,IAAAA,GAAF;AAAO,OAAGC;AAAV,MAAwBJ,YAAY,EAA1C;;AAEA,QAAMK,UAAU,GAAG,YAAY;AAC7B,QAAI;AACFrC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAH,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMyC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBvC,IAAxB;AACAqC,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAuBrB,KAAvB;AACA,YAAMsB,OAAO,GAAG,kDAAhB;AACA,YAAMC,QAAQ,GAAG,MAAMhF,KAAK,CAACiF,GAAN,CAAUF,OAAV,EAAmBH,QAAnB,EAA6B;AAClDM,QAAAA,gBAAgB,EAAGC,aAAD,IAAmB;AACnC,gBAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAL,CACtBH,aAAa,CAACI,MAAd,GAAuB,GAAxB,GAA+BJ,aAAa,CAACK,KADtB,CAAzB;AAGA7C,UAAAA,UAAU,CAACO,QAAD,CAAV;AACD;AANiD,OAA7B,CAAvB,CAPE,CAeH;;AACCL,MAAAA,cAAc,CAACmC,QAAQ,CAACS,IAAT,CAAcC,eAAf,CAAd;AACApD,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAH,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAnBD,CAmBE,OAAOwD,GAAP,EAAY;AACZC,MAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD;AACF,GAvBD;;AAyBA,QAAMC,UAAU,GAAG,CAAC;AAAEvD,IAAAA,IAAF;AAAQzB,IAAAA;AAAR,GAAD,KAAuB;AACxC2B,IAAAA,UAAU,CAAC3B,OAAD,CAAV;AACA0B,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,IAAAA,UAAU,CAAC,CAAD,CAAV;AACD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAA2B,cAAA,KAAK,EAAE;AAAEoD,gBAAAA,OAAO,EAAE;AAAX,eAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,KAAK,EAAE;AAAEA,cAAAA,OAAO,EAAE;AAAX,aAAzB;AAAA,mCACE,QAAC,OAAD;AAAS,cAAA,OAAO,EAAEtB,GAAlB;AAAA,qCACE,QAAC,KAAD,OACMC,SADN;AAEE,gBAAA,SAAS,EAAE,CAFb;AAGE,gBAAA,SAAS,EAAEzC,OAAO,CAAC3B,iBAHrB;AAAA,wCAKE,sBAAWiE,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,wBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBARF,eAqBE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,CAAf;AAAkB,YAAA,KAAK,EAAE;AAAEwB,cAAAA,OAAO,EAAE;AAAX,aAAzB;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,KAAK,EAAC,QAAlB;AAA2B,cAAA,OAAO,EAAC,WAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AACE,cAAA,MAAM,EAAE,MAAM3B,GAAG,CAAC4B,eAAJ,CAAoBlF,OAApB,CADhB;AAEE,cAAA,SAAS,EAAEmB,OAAO,CAACnB,OAFrB;AAGE,cAAA,GAAG,EAAEA,OAAO,IAAIsC;AAHlB;AAAA;AAAA;AAAA;AAAA,oBAJF,EAWGb,IAAI,iBACH;AAAA,sCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD;AACE,gBAAA,SAAS,MADX;AAEE,gBAAA,KAAK,EAAE;AAAET,kBAAAA,SAAS,EAAE;AAAb,iBAFT;AAGE,gBAAA,UAAU,EAAC,QAHb;AAIE,gBAAA,OAAO,EAAE,CAJX;AAAA,wCAME,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,CAAf;AAAA,yCACE;AAAK,oBAAA,SAAS,EAAEG,OAAO,CAACb,OAAxB;AAAA,4CACE,QAAC,GAAD;AACE,oCAAW,MADb;AAEE,sBAAA,KAAK,EAAC,SAFR;AAGE,sBAAA,SAAS,EAAEyC,eAHb;AAIE,sBAAA,OAAO,EAAEc,UAJX;AAAA,gCAMGtC,OAAO,gBAAG,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,8BAAH,gBAAmB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAN7B;AAAA;AAAA;AAAA;AAAA,4BADF,EASGH,OAAO,iBACN,QAAC,gBAAD;AACE,sBAAA,IAAI,EAAE,EADR;AAEE,sBAAA,SAAS,EAAED,OAAO,CAACT;AAFrB;AAAA;AAAA;AAAA;AAAA,4BAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBANF,eAyBE,QAAC,IAAD;AAAM,kBAAA,IAAI,MAAV;AAAW,kBAAA,EAAE,EAAE,EAAf;AAAA,6BACGe,IAAI,iBACH,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,MAApB;AAAA,8BAA4BA,IAAI,CAAC0D;AAAjC;AAAA;AAAA;AAAA;AAAA,0BAFJ,EAIG/D,OAAO,iBACN;AAAA,4CACE,QAAC,cAAD;AACE,sBAAA,OAAO,EAAC,aADV;AAEE,sBAAA,KAAK,EAAEQ;AAFT;AAAA;AAAA;AAAA;AAAA,4BADF,eAKE;AACE,sBAAA,KAAK,EAAE;AACLjC,wBAAAA,OAAO,EAAE,MADJ;AAELC,wBAAAA,UAAU,EAAE,QAFP;AAGLC,wBAAAA,cAAc,EAAE;AAHX,uBADT;AAAA,6CAOE,QAAC,UAAD;AAAY,wBAAA,OAAO,EAAC,MAApB;AAAA,mCAA4B+B,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,4BALF;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,EAsBGL,OAAO,iBACN,QAAC,UAAD;AAAA,wEACwC,GADxC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA,4BAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBArBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eA0GE,QAAC,SAAD;AAAW,MAAA,MAAM,EAAEyD,UAAnB;AAA+B,MAAA,YAAY,EAAEhD;AAA7C;AAAA;AAAA;AAAA;AAAA,YA1GF;AAAA,kBADF;AA8GD;;GA7LQd,G;UACS5B,S,EAuCwBf,W;;;KAxCjC2C,G;;AA8LT,SAASiB,aAAT,GAA0B;AACxB,QAAMD,WAAW,GAAG9C,WAAW,CAACgG,cAAZ,EAApB,CADwB,CAExB;;AACA,MAAIlD,WAAW,IAAIA,WAAW,CAACE,QAA3B,IAAuCF,WAAW,CAACE,QAAZ,CAAqBiD,MAArB,GAA8B,CAAzE,EAA4E;AAC1E,WAAOnD,WAAP;AACD,GALuB,CAMxB;;;AACA,SAAO,WAAP;AACD;;AAGD,eAAehB,GAAf","sourcesContent":["import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport RootRef from \"@material-ui/core/RootRef\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CloudUpload from \"@material-ui/icons/CloudUpload\";\r\nimport clsx from \"clsx\";\r\nimport { LinearProgress } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport CropImage from \"./CropImage\";\r\nimport authService from '../services/auth.service';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  dropzoneContainer: {\r\n    height: 429,\r\n    background: \"#efefef\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderStyle: \"dashed\",\r\n    borderColor: \"#aaa\",\r\n  },\r\n  preview: {\r\n    width: 250,\r\n    height: 250,\r\n    margin: \"auto\",\r\n    display: \"block\",\r\n    marginBottom: theme.spacing(2),\r\n    objectFit: \"contain\",\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n  },\r\n  buttonSuccess: {\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n  fabProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: -6,\r\n    left: -6,\r\n    zIndex: 1,\r\n  },\r\n  buttonProgress: {\r\n    color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n}));\r\n\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [file, setFile] = React.useState();\r\n  const [preview, setPreview] = React.useState();\r\n  const [percent, setPercent] = React.useState(0);\r\n  const [downloadUri, setDownloadUri] = React.useState();\r\n  const [selectedImageFile, setSelectedImageFile] = React.useState();\r\n  const currentUser = checkUsername();\r\n  const [username,setUsername]=React.useState(currentUser.username);\r\n  const [image,setImage]=React.useState(currentUser.profileImage); \r\n  \r\n  const VerifyAccount = withRouter((props) => {\r\n     email = props.match.params;\r\n   \r\n  });\r\n  const[email,setEmail]=React.useState(VerifyAccount);\r\n  \r\n  const buttonClassname = clsx({\r\n    [classes.buttonSuccess]: success,\r\n  });\r\n\r\n  const onDrop = React.useCallback((acceptedFiles) => {\r\n    const fileDropped = acceptedFiles[0];\r\n    if (fileDropped[\"type\"].split(\"/\")[0] === \"image\") {\r\n      setSelectedImageFile(fileDropped);\r\n      \r\n      return;\r\n    }\r\n    setFile(fileDropped);\r\n    const previewUrl = URL.createObjectURL(fileDropped);\r\n    setPreview(previewUrl);\r\n    setSuccess(false);\r\n    setPercent(0);\r\n    \r\n  });\r\n\r\n\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    multiple: false,\r\n    onDrop,\r\n  });\r\n\r\n  const { ref, ...rootProps } = getRootProps();\r\n\r\n  const uploadFile = async () => {\r\n    try {\r\n      setSuccess(false);\r\n      setLoading(true);\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      formData.append(\"user\",email)\r\n      const API_URL = \"http://localhost:8082/api/auth/addProfilePicture\";\r\n      const response = await axios.put(API_URL, formData, {\r\n        onUploadProgress: (progressEvent) => {\r\n          const percentCompleted = Math.round(\r\n            (progressEvent.loaded * 100) / progressEvent.total\r\n          );\r\n          setPercent(username);\r\n        },\r\n      });\r\n     // setUsername(response.data.username);\r\n      setDownloadUri(response.data.fileDownloadUri);\r\n      setSuccess(true);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  const onCropSave = ({ file, preview }) => {\r\n    setPreview(preview);\r\n    setFile(file);\r\n    setSuccess(false);\r\n    setPercent(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      \r\n      <Toolbar />\r\n      <Toolbar />\r\n\r\n      <Container maxWidth=\"md\">\r\n        <Paper elevation={4}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography align=\"center\" style={{ padding: 16 }}>\r\n                Add Your Profile Picture.\r\n              </Typography>\r\n              <Divider />\r\n            </Grid>\r\n\r\n            <Grid item xs={6} style={{ padding: 16 }}>\r\n              <RootRef rootRef={ref}>\r\n                <Paper\r\n                  {...rootProps}\r\n                  elevation={0}\r\n                  className={classes.dropzoneContainer}\r\n                >\r\n                  <input {...getInputProps()} />\r\n                  <p>Drag 'n' drop some image here, or click to select image </p>\r\n                </Paper>\r\n              </RootRef>\r\n            </Grid>\r\n\r\n            <Grid item xs={6} style={{ padding: 16 }}>\r\n              <Typography align=\"center\" variant=\"subtitle1\">\r\n                Preview\r\n              </Typography>\r\n              <img\r\n                onLoad={() => URL.revokeObjectURL(preview)}\r\n                className={classes.preview}\r\n                src={preview || image}\r\n              />\r\n\r\n              {/*  */}\r\n              {file && (\r\n                <>\r\n                  <Divider />\r\n                  <Grid\r\n                    container\r\n                    style={{ marginTop: 16 }}\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                  >\r\n                    <Grid item xs={2}>\r\n                      <div className={classes.wrapper}>\r\n                        <Fab\r\n                          aria-label=\"save\"\r\n                          color=\"primary\"\r\n                          className={buttonClassname}\r\n                          onClick={uploadFile}\r\n                        >\r\n                          {success ? <CheckIcon /> : <CloudUpload />}\r\n                        </Fab>\r\n                        {loading && (\r\n                          <CircularProgress\r\n                            size={68}\r\n                            className={classes.fabProgress}\r\n                          />\r\n                        )}\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10}>\r\n                      {file && (\r\n                        <Typography variant=\"body\">{file.name}</Typography>\r\n                      )}\r\n                      {loading && (\r\n                        <div>\r\n                          <LinearProgress\r\n                            variant=\"determinate\"\r\n                            value={percent}\r\n                          />\r\n                          <div\r\n                            style={{\r\n                              display: \"flex\",\r\n                              alignItems: \"center\",\r\n                              justifyContent: \"center\",\r\n                            }}\r\n                          >\r\n                            <Typography variant=\"body\">{percent}%</Typography>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n\r\n                      {success && (\r\n                        <Typography>\r\n                          Profile Picture Successfully Updated!{\" \"}\r\n                         \r\n                        </Typography>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n              {/*  */}\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Container>\r\n\r\n      <CropImage onSave={onCropSave} selectedFile={selectedImageFile} />\r\n    </>\r\n  );\r\n}\r\nfunction checkUsername () {\r\n  const currentUser = authService.getCurrentUser();\r\n  // Checks for undefined, null, and a string with no characters:\r\n  if (currentUser && currentUser.username && currentUser.username.length > 0) {\r\n    return currentUser;\r\n  }\r\n  // Default case:\r\n  return 'Anonymous'\r\n}\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}