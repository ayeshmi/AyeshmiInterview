{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8082/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL + \"signin\", {\n      username,\n      password\n    }).then(response => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n  }\n\n  getBooksByID(bookId) {\n    return axios.get('http://localhost:8082/api/auth/book/' + bookId);\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, dateOfBirth, password, userType) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      dateOfBirth,\n      password,\n      userType\n    });\n  }\n\n  contactUs(name, email, message) {\n    return axios.post(API_URL + \"contactus\", {\n      name,\n      email,\n      message\n    });\n  }\n\n  getUsers() {\n    return axios.get(API_URL + \"employees\");\n  }\n\n  getVideos() {\n    return axios.get(API_URL + \"AllVideos\");\n  }\n\n  getBooks() {\n    return axios.get(API_URL + \"books\");\n  }\n\n  getAllContactUsDetails() {\n    return axios.get(API_URL + \"allConatctUs\");\n  }\n\n  getAllCommentByID(ID) {\n    return axios.get(API_URL + \"allCommentByID/\" + ID);\n  }\n\n  getContactUsDetailById(contactID) {\n    return axios.get(API_URL + \"contactus/\" + contactID);\n  }\n\n  replyContactUs(answer, contactID, email) {\n    return axios.post(API_URL + \"contactus/\" + contactID, {\n      answer,\n      email\n    });\n  }\n\n  addVideoDetails(category, date, description, title, ageLimitation) {\n    return axios.post(API_URL + \"addVideo\", {\n      category,\n      title,\n      date,\n      description,\n      ageLimitation\n    });\n  }\n\n  deleteContactUsDetailsById(id) {\n    return axios.delete(API_URL + \"deleteContactUs/\" + id);\n  }\n\n  deleteBookById(id) {\n    return axios.delete(API_URL + \"deleteBook/\" + id);\n  }\n\n  deleteVideoById(id) {\n    return axios.delete(API_URL + \"deleteVideo/\" + id);\n  }\n\n  addNewBook(category, title, author, inumber, numberOfCopies, date, bookDescription) {\n    return axios.post(API_URL + \"addbook\", {\n      category,\n      title,\n      author,\n      inumber,\n      numberOfCopies,\n      date,\n      bookDescription\n    });\n  }\n\n  addNewBookReservation(bookName, email, userId, bookId) {\n    return axios.post(API_URL + \"bookReservation\", {\n      bookName,\n      email,\n      userId,\n      bookId\n    });\n  }\n\n  getUserProfilePicture(username) {\n    return axios.get(API_URL + \"profilePicture/\" + username);\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));\n    ;\n  }\n\n  getUserType(name) {\n    return name;\n  }\n\n  homePageVideos() {\n    return axios.get(API_URL + \"selectedVideo/Romance\");\n  }\n\n  homePageBooks() {\n    return axios.get(API_URL + \"selectedBook/Fantasy\");\n  }\n\n  RhomePageBooksFantasy() {\n    return axios.get(API_URL + \"RselectedBookF/Fantasy\");\n  }\n\n  RhomePageBooksAction() {\n    return axios.get(API_URL + \"RselectedBookA/Action\");\n  }\n\n  RhomePageBooksDrama() {\n    return axios.get(API_URL + \"RselectedBookD/Drama\");\n  }\n\n  RhomePageBooksComic() {\n    return axios.get(API_URL + \"RselectedBookC/Comic and Graphic Novel\");\n  }\n\n  RhomePageBooksRomance() {\n    return axios.get(API_URL + \"RselectedBookR/Romance\");\n  }\n\n  RhomePageBooksHorror() {\n    return axios.get(API_URL + \"RselectedBookH/Horror\");\n  }\n\n  addCommentBook(username, commentDetails, typeID, type) {\n    return axios.post(API_URL + \"addCommentBook\", {\n      username,\n      commentDetails,\n      type,\n      typeID\n    });\n  }\n\n  searchBook(specification) {\n    return axios.get(API_URL + \"searchBooks/\" + specification);\n  }\n\n  searchVideo(specification) {\n    return axios.get(API_URL + \"searchVideos/\" + specification);\n  }\n\n  getPaymentDetailsByEmail(email) {\n    return axios.get(API_URL + \"paymentDetails/\" + email);\n  }\n\n  addPayment(cardType, cardHolderName, cardNumber, expiryDate, cvv, email) {\n    return axios.post(API_URL + \"addPayment\", {\n      cardType,\n      cardHolderName,\n      cardNumber,\n      expiryDate,\n      cvv,\n      email\n    });\n  }\n\n  getBookReservationCart(email) {\n    return axios.get(API_URL + \"getAllCartBookReservation/\" + email);\n  }\n\n  checkOutDetailsForBookReservation(email) {\n    return axios.get(API_URL + \"getCheckOutTotalPrice/\" + email);\n  }\n\n  getCheckOutTotalPrice(email) {\n    return axios.get(API_URL + \"getCheckOutTotalPrice/\" + email);\n  }\n\n  confirmBookCart(email, price) {\n    return axios.get(API_URL + \"confirmBookCart/\" + email, {\n      price\n    });\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/ayesh/EIRLSassignment/src/components/services/auth.service.js"],"names":["axios","API_URL","AuthService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","getBooksByID","bookId","get","logout","removeItem","register","email","dateOfBirth","userType","contactUs","name","message","getUsers","getVideos","getBooks","getAllContactUsDetails","getAllCommentByID","ID","getContactUsDetailById","contactID","replyContactUs","answer","addVideoDetails","category","date","description","title","ageLimitation","deleteContactUsDetailsById","id","delete","deleteBookById","deleteVideoById","addNewBook","author","inumber","numberOfCopies","bookDescription","addNewBookReservation","bookName","userId","getUserProfilePicture","getCurrentUser","parse","getItem","getUserType","homePageVideos","homePageBooks","RhomePageBooksFantasy","RhomePageBooksAction","RhomePageBooksDrama","RhomePageBooksComic","RhomePageBooksRomance","RhomePageBooksHorror","addCommentBook","commentDetails","typeID","type","searchBook","specification","searchVideo","getPaymentDetailsByEmail","addPayment","cardType","cardHolderName","cardNumber","expiryDate","cvv","getBookReservationCart","checkOutDetailsForBookReservation","getCheckOutTotalPrice","confirmBookCart","price"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8082/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  getBooksByID(bookId){\r\n    return axios.get('http://localhost:8082/api/auth/book/'+bookId);\r\n}\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email,dateOfBirth, password,userType) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      dateOfBirth,\r\n      password,\r\n      userType\r\n    });\r\n  }\r\n\r\n contactUs(name, email,message) {\r\n    return axios.post(API_URL + \"contactus\", {\r\n      name,\r\n      email,\r\n      message\r\n    });\r\n  }\r\n\r\n  getUsers(){\r\n    return axios.get(API_URL+\"employees\");\r\n    }\r\n\r\n    getVideos(){\r\n      return axios.get(API_URL+\"AllVideos\");\r\n      }\r\n\r\n    getBooks(){\r\n      return axios.get(API_URL+\"books\");\r\n      }\r\n\r\n    getAllContactUsDetails(){\r\n      return axios.get(API_URL+\"allConatctUs\");\r\n      }\r\n\r\n      getAllCommentByID(ID){\r\n        return axios.get(API_URL+\"allCommentByID/\"+ID);\r\n        }\r\n\r\n    getContactUsDetailById(contactID){\r\n      return axios.get(API_URL + \"contactus/\"+contactID);\r\n    }\r\n\r\n    replyContactUs(answer,contactID,email){\r\n      return axios.post(API_URL+\"contactus/\"+contactID,{answer,email});\r\n     }\r\n\r\n     addVideoDetails(category,date,description,title,ageLimitation){\r\n      return axios.post(API_URL+\"addVideo\",{category,title,date,description,ageLimitation});\r\n     }\r\n\r\n     deleteContactUsDetailsById(id){\r\n      return axios.delete(API_URL+\"deleteContactUs/\"+id);\r\n     }\r\n\r\n     deleteBookById(id){\r\n      return axios.delete(API_URL+\"deleteBook/\"+id);\r\n     }\r\n\r\n     deleteVideoById(id){\r\n      return axios.delete(API_URL+\"deleteVideo/\"+id);\r\n     }\r\n\r\n  addNewBook(category,title,author,inumber,numberOfCopies,date,bookDescription){\r\n    return axios.post(API_URL + \"addbook\", {\r\n     category,\r\n     title,\r\n     author,\r\n     inumber,\r\n     numberOfCopies,\r\n     date,\r\n     bookDescription\r\n    });\r\n  }\r\n\r\n  addNewBookReservation(bookName,email,userId,bookId){\r\n    return axios.post(API_URL + \"bookReservation\", {\r\n     bookName,\r\n     email,\r\n     userId,\r\n     bookId\r\n     });\r\n  }\r\n  getUserProfilePicture(username){\r\n    return axios.get(API_URL+\"profilePicture/\"+username);\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n  getUserType(name){\r\n    return name;\r\n  }\r\n  homePageVideos(){\r\n    return axios.get(API_URL+\"selectedVideo/Romance\");\r\n  }\r\n  homePageBooks(){\r\n    return axios.get(API_URL+\"selectedBook/Fantasy\");\r\n  }\r\n  RhomePageBooksFantasy(){\r\n    return axios.get(API_URL+\"RselectedBookF/Fantasy\");\r\n  }\r\n  RhomePageBooksAction(){\r\n    return axios.get(API_URL+\"RselectedBookA/Action\");\r\n  }\r\n  RhomePageBooksDrama(){\r\n    return axios.get(API_URL+\"RselectedBookD/Drama\");\r\n  }\r\n  RhomePageBooksComic(){\r\n    return axios.get(API_URL+\"RselectedBookC/Comic and Graphic Novel\");\r\n  }\r\n  RhomePageBooksRomance(){\r\n    return axios.get(API_URL+\"RselectedBookR/Romance\");\r\n  }\r\n  RhomePageBooksHorror(){\r\n    return axios.get(API_URL+\"RselectedBookH/Horror\");\r\n  }\r\n  addCommentBook(username,commentDetails,typeID,type){\r\n    return axios.post(API_URL + \"addCommentBook\", {\r\n      username,\r\n      commentDetails,\r\n      type,\r\n     typeID\r\n      });\r\n  }\r\n  searchBook(specification){\r\n    return axios.get(API_URL + \"searchBooks/\"+specification);\r\n  }\r\n\r\n  searchVideo(specification){\r\n    return axios.get(API_URL + \"searchVideos/\"+specification);\r\n  }\r\n\r\n  getPaymentDetailsByEmail(email){\r\n    return axios.get(API_URL+\"paymentDetails/\"+email);\r\n  }\r\n  addPayment(cardType,cardHolderName,cardNumber,expiryDate,cvv,email){\r\n    return axios.post(API_URL + \"addPayment\",{\r\n     \r\n      cardType,\r\n      cardHolderName,\r\n      cardNumber,\r\n      expiryDate,\r\n      cvv,\r\n      email\r\n      });\r\n  }\r\n\r\n  getBookReservationCart(email){\r\n    return axios.get(API_URL+\"getAllCartBookReservation/\"+email); \r\n  }\r\n  checkOutDetailsForBookReservation(email){\r\n    return axios.get(API_URL+\"getCheckOutTotalPrice/\"+email)\r\n  }\r\n\r\n  getCheckOutTotalPrice(email){\r\n    return axios.get(API_URL+\"getCheckOutTotalPrice/\"+email)\r\n  }\r\n  confirmBookCart(email,price){\r\n    return axios.get(API_URL+\"confirmBookCart/\"+email,{price})\r\n  }\r\n \r\n \r\n}\r\n\r\nexport default new AuthService();"]},"metadata":{},"sourceType":"module"}